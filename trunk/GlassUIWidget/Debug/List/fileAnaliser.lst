##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    08/May/2011  19:48:25 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\file\fi #
#                       leAnaliser.cpp                                       #
#    Command line    =  C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\file\fi #
#                       leAnaliser.cpp -D OLDFUNCTIONS -lC                   #
#                       C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\Debug\L #
#                       ist\ -lA C:\Users\Faby\Desktop\StudyElf\GlassUIWidge #
#                       t\Debug\List\ -o C:\Users\Faby\Desktop\StudyElf\Glas #
#                       sUIWidget\Debug\Obj\ -z2 --no_cse --no_unroll        #
#                       --no_inline --no_code_motion --no_tbaa               #
#                       --no_clustering --no_scheduling --debug --cpu_mode   #
#                       arm --endian little --cpu ARM926EJ-S --stack_align   #
#                       4 --interwork -e --fpu None --eec++ --dlib_config    #
#                       "C:\Users\Faby\EmbebedIAR\Embedded Workbench 4.0     #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\Users\Faby\EmbebedIAR\Embedded Workbench 4.0     #
#                       Evaluation\ARM\INC\"                                 #
#    List file       =  C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\Debug\L #
#                       ist\fileAnaliser.lst                                 #
#    Object file     =  C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\Debug\O #
#                       bj\fileAnaliser.r79                                  #
#                                                                            #
#                                                                            #
##############################################################################

C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\file\fileAnaliser.cpp
      1          #include "..\..\include\Lib_Clara.h"
      2          #include "..\..\include\Dir.h"
      3          #include "..\utils\utils.h"
      4          #include "fileAnaliser.h"
      5          

   \                                 In segment CODE, align 4, keep-with-next
      6          wchar_t* getDate() { //"2011/3/20"
   \                     ??getDate:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
      7            DATETIME dt;
      8            REQUEST_DATEANDTIME_GET(SYNC,&dt);
   \   00000008   0D10B0E1           MOVS     R1,SP
   \   0000000C   44009FE5           LDR      R0,??getDate_1   ;; SYNC
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   6E0100EF           SWI      +366
      9            wchar_t* data = new wchar_t[0x32];
   \   00000018   6400A0E3           MOV      R0,#+100
   \   0000001C   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   00000020   0040B0E1           MOVS     R4,R0
     10            snwprintf(data,32,L"<Period StartDate=\"%u/%d/%d\">",dt.date.year,dt.date.mon,dt.date.day);
   \   00000024   0300DDE5           LDRB     R0,[SP, #+3]
   \   00000028   01002DE9           PUSH     {R0}
   \   0000002C   0600DDE5           LDRB     R0,[SP, #+6]
   \   00000030   01002DE9           PUSH     {R0}
   \   00000034   B830DDE1           LDRH     R3,[SP, #+8]
   \   00000038   1C209FE5           LDR      R2,??getDate_1+0x4  ;; `?<Constant L"\\x3c\\x50\\x65\\x72\\x69\\x6f\\x64\\x20\\`
   \   0000003C   2010A0E3           MOV      R1,#+32
   \   00000040   0400B0E1           MOVS     R0,R4
   \   00000044   150100EF           SWI      +277
   \   00000048   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
     11            return data;
   \   0000004C   0400B0E1           MOVS     R0,R4
   \   00000050   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000054   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??getDate_1:
   \   00000058   ........           DC32     SYNC
   \   0000005C   ........           DC32     `?<Constant L"\\x3c\\x50\\x65\\x72\\x69\\x6f\\x64\\x20\\`
     12          }
     13          

   \                                 In segment CODE, align 4, keep-with-next
     14          wchar_t* getTag(wchar_t* line, int pos, int& sizeOfTag) {
   \                     ??getTag:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0150B0E1           MOVS     R5,R1
   \   0000000C   0260B0E1           MOVS     R6,R2
     15            int tagClose = wGetIndexOf(line, '>', 1, pos);
   \   00000010   0530B0E1           MOVS     R3,R5
   \   00000014   0120A0E3           MOV      R2,#+1
   \   00000018   3E10A0E3           MOV      R1,#+62
   \   0000001C   0400B0E1           MOVS     R0,R4
   \   00000020   ........           _BLF     ??wGetIndexOf,??wGetIndexOf??rA
   \   00000024   0070B0E1           MOVS     R7,R0
     16            wchar_t* tag = new wchar_t[tagClose+0x2];
   \   00000028   020097E2           ADDS     R0,R7,#+2
   \   0000002C   0210A0E3           MOV      R1,#+2
   \   00000030   910010E0           MULS     R0,R1,R0
   \   00000034   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   00000038   0080B0E1           MOVS     R8,R0
     17            sizeOfTag = tagClose - pos + 2;
   \   0000003C   050057E0           SUBS     R0,R7,R5
   \   00000040   020090E2           ADDS     R0,R0,#+2
   \   00000044   000086E5           STR      R0,[R6, #+0]
     18            for (tagClose=0; tagClose < wstrlen(line) && line[pos + tagClose] != '>' && (tagClose < sizeOfTag); tagClose++)
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   0070B0E1           MOVS     R7,R0
   \                     ??getTag_1:
   \   00000050   0400B0E1           MOVS     R0,R4
   \   00000054   570100EF           SWI      +343
   \   00000058   000057E1           CMP      R7,R0
   \   0000005C   110000AA           BGE      ??getTag_2
   \   00000060   050097E0           ADDS     R0,R7,R5
   \   00000064   0210A0E3           MOV      R1,#+2
   \   00000068   914020E0           MLA      R0,R1,R0,R4
   \   0000006C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000070   3E0050E3           CMP      R0,#+62
   \   00000074   0B00000A           BEQ      ??getTag_2
   \   00000078   000096E5           LDR      R0,[R6, #+0]
   \   0000007C   000057E1           CMP      R7,R0
   \   00000080   080000AA           BGE      ??getTag_2
     19              tag[tagClose] = line[pos + tagClose];
   \   00000084   0200A0E3           MOV      R0,#+2
   \   00000088   908721E0           MLA      R1,R0,R7,R8
   \   0000008C   050097E0           ADDS     R0,R7,R5
   \   00000090   0220A0E3           MOV      R2,#+2
   \   00000094   924020E0           MLA      R0,R2,R0,R4
   \   00000098   B000D0E1           LDRH     R0,[R0, #+0]
   \   0000009C   B000C1E1           STRH     R0,[R1, #+0]
   \   000000A0   017097E2           ADDS     R7,R7,#+1
   \   000000A4   E9FFFFEA           B        ??getTag_1
     20            tag[tagClose] = line[pos + tagClose];
   \                     ??getTag_2:
   \   000000A8   0200A0E3           MOV      R0,#+2
   \   000000AC   908721E0           MLA      R1,R0,R7,R8
   \   000000B0   050097E0           ADDS     R0,R7,R5
   \   000000B4   0220A0E3           MOV      R2,#+2
   \   000000B8   924020E0           MLA      R0,R2,R0,R4
   \   000000BC   B000D0E1           LDRH     R0,[R0, #+0]
   \   000000C0   B000C1E1           STRH     R0,[R1, #+0]
     21            tag[tagClose+0x1] = 0;
   \   000000C4   0200A0E3           MOV      R0,#+2
   \   000000C8   908721E0           MLA      R1,R0,R7,R8
   \   000000CC   0000A0E3           MOV      R0,#+0
   \   000000D0   B200C1E1           STRH     R0,[R1, #+2]
     22            return tag;
   \   000000D4   0800B0E1           MOVS     R0,R8
   \   000000D8   F081BDE8           POP      {R4-R8,PC}       ;; return
     23          }
     24          

   \                                 In segment CODE, align 4, keep-with-next
     25          wchar_t* getEqualContent(wchar_t* fileContent, int& pos) {
   \                     ??getEqualContent:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0150B0E1           MOVS     R5,R1
     26            int indexOfEqual = wGetIndexOf(fileContent,'=',1,pos);
   \   0000000C   003095E5           LDR      R3,[R5, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   3D10A0E3           MOV      R1,#+61
   \   00000018   0400B0E1           MOVS     R0,R4
   \   0000001C   ........           _BLF     ??wGetIndexOf,??wGetIndexOf??rA
   \   00000020   0060B0E1           MOVS     R6,R0
     27            indexOfEqual+=2;
   \   00000024   026096E2           ADDS     R6,R6,#+2
     28            int indexOfQuotes = wGetIndexOf(fileContent,'"',1,indexOfEqual);
   \   00000028   0630B0E1           MOVS     R3,R6
   \   0000002C   0120A0E3           MOV      R2,#+1
   \   00000030   2210A0E3           MOV      R1,#+34
   \   00000034   0400B0E1           MOVS     R0,R4
   \   00000038   ........           _BLF     ??wGetIndexOf,??wGetIndexOf??rA
   \   0000003C   0070B0E1           MOVS     R7,R0
     29            pos = indexOfQuotes;
   \   00000040   007085E5           STR      R7,[R5, #+0]
     30          
     31            return getWSubStr(fileContent,indexOfEqual,indexOfQuotes-1);
   \   00000044   012057E2           SUBS     R2,R7,#+1
   \   00000048   0610B0E1           MOVS     R1,R6
   \   0000004C   0400B0E1           MOVS     R0,R4
   \   00000050   ........           _BLF     ??getWSubStr,??getWSubStr??rA
   \   00000054   F080BDE8           POP      {R4-R7,PC}       ;; return
     32          }
     33          

   \                                 In segment CODE, align 4, keep-with-next
     34          int getDayState(wchar_t* fileContent,int& pos) {
   \                     ??getDayState:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
   \   0000000C   0150B0E1           MOVS     R5,R1
     35            int dayState_ = 0;
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   00108DE5           STR      R1,[SP, #+0]
     36          
     37            wchar_t* dayState = getEqualContent(fileContent,pos); //getWSubStr(fileContent,indexOfEqual,indexOfQuotes-1);
   \   00000018   0510B0E1           MOVS     R1,R5
   \   0000001C   0400B0E1           MOVS     R0,R4
   \   00000020   ........           BL       ??getEqualContent
   \   00000024   0060B0E1           MOVS     R6,R0
     38            swscanf (dayState, L"%d", &dayState_);
   \   00000028   0D20B0E1           MOVS     R2,SP
   \   0000002C   20109FE5           LDR      R1,??getDayState_1  ;; `?<Constant L"\\x25\\x64">`
   \   00000030   0600B0E1           MOVS     R0,R6
   \   00000034   CC0300EF           SWI      +972
     39            delete dayState; dayState = NULL;
   \   00000038   0600B0E1           MOVS     R0,R6
   \   0000003C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   0060B0E1           MOVS     R6,R0
     40            
     41            return dayState_;
   \   00000048   00009DE5           LDR      R0,[SP, #+0]
   \   0000004C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000050   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??getDayState_1:
   \   00000054   ........           DC32     `?<Constant L"\\x25\\x64">`
     42          }
     43          

   \                                 In segment CODE, align 4, keep-with-next
     44          wchar_t* getLocation(wchar_t* fileContent, int& cursor) {
   \                     ??getLocation:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0150B0E1           MOVS     R5,R1
     45                while (cursor < wstrlen(fileContent)) {
   \                     ??getLocation_1:
   \   0000000C   006095E5           LDR      R6,[R5, #+0]
   \   00000010   0400B0E1           MOVS     R0,R4
   \   00000014   570100EF           SWI      +343
   \   00000018   000056E1           CMP      R6,R0
   \   0000001C   130000AA           BGE      ??getLocation_2
     46                  if (fileContent[cursor] == '<' && fileContent[cursor+0x1] == 'F')
   \   00000020   000095E5           LDR      R0,[R5, #+0]
   \   00000024   0210A0E3           MOV      R1,#+2
   \   00000028   914020E0           MLA      R0,R1,R0,R4
   \   0000002C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000030   3C0050E3           CMP      R0,#+60
   \   00000034   0900001A           BNE      ??getLocation_3
   \   00000038   000095E5           LDR      R0,[R5, #+0]
   \   0000003C   0210A0E3           MOV      R1,#+2
   \   00000040   914020E0           MLA      R0,R1,R0,R4
   \   00000044   B200D0E1           LDRH     R0,[R0, #+2]
   \   00000048   460050E3           CMP      R0,#+70
   \   0000004C   0300001A           BNE      ??getLocation_3
     47                    return getEqualContent(fileContent,cursor);
   \   00000050   0510B0E1           MOVS     R1,R5
   \   00000054   0400B0E1           MOVS     R0,R4
   \   00000058   ........           BL       ??getEqualContent
   \   0000005C   040000EA           B        ??getLocation_4
     48                  cursor++;
   \                     ??getLocation_3:
   \   00000060   000095E5           LDR      R0,[R5, #+0]
   \   00000064   010090E2           ADDS     R0,R0,#+1
   \   00000068   000085E5           STR      R0,[R5, #+0]
   \   0000006C   E6FFFFEA           B        ??getLocation_1
     49                }
     50                return NULL;
   \                     ??getLocation_2:
   \   00000070   0000A0E3           MOV      R0,#+0
   \                     ??getLocation_4:
   \   00000074   7080BDE8           POP      {R4-R6,PC}       ;; return
     51          }
     52          

   \                                 In segment CODE, align 4, keep-with-next
     53          wchar_t* getWeatherConditions(wchar_t* num, wchar_t* xmlContent) {
   \                     ??getWeatherConditions:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
   \   0000000C   0150B0E1           MOVS     R5,R1
     54            wchar_t* tag = NULL;
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   0060B0E1           MOVS     R6,R0
     55            for (int i=0; i<wstrlen(xmlContent);i++){
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \                     ??getWeatherConditions_1:
   \   00000020   0500B0E1           MOVS     R0,R5
   \   00000024   570100EF           SWI      +343
   \   00000028   00109DE5           LDR      R1,[SP, #+0]
   \   0000002C   000051E1           CMP      R1,R0
   \   00000030   280000AA           BGE      ??getWeatherConditions_2
     56              if (xmlContent[i] == '"') {
   \   00000034   00009DE5           LDR      R0,[SP, #+0]
   \   00000038   0210A0E3           MOV      R1,#+2
   \   0000003C   915020E0           MLA      R0,R1,R0,R5
   \   00000040   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000044   220050E3           CMP      R0,#+34
   \   00000048   1E00001A           BNE      ??getWeatherConditions_3
     57                tag = getWSubStr(xmlContent,i+1,wGetIndexOf(xmlContent,'"',1,i+1));
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   013090E2           ADDS     R3,R0,#+1
   \   00000054   0120A0E3           MOV      R2,#+1
   \   00000058   2210A0E3           MOV      R1,#+34
   \   0000005C   0500B0E1           MOVS     R0,R5
   \   00000060   ........           _BLF     ??wGetIndexOf,??wGetIndexOf??rA
   \   00000064   0020B0E1           MOVS     R2,R0
   \   00000068   00009DE5           LDR      R0,[SP, #+0]
   \   0000006C   011090E2           ADDS     R1,R0,#+1
   \   00000070   0500B0E1           MOVS     R0,R5
   \   00000074   ........           _BLF     ??getWSubStr,??getWSubStr??rA
   \   00000078   0060B0E1           MOVS     R6,R0
     58                if (compareWchar(tag,num)) {
   \   0000007C   0410B0E1           MOVS     R1,R4
   \   00000080   0600B0E1           MOVS     R0,R6
   \   00000084   ........           _BLF     ??compareWchar,??compareWchar??rA
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0700000A           BEQ      ??getWeatherConditions_4
     59                  delete tag; tag = NULL;
   \   00000090   0600B0E1           MOVS     R0,R6
   \   00000094   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000098   0000A0E3           MOV      R0,#+0
   \   0000009C   0060B0E1           MOVS     R6,R0
     60                  return getEqualContent(xmlContent,i);
   \   000000A0   0D10B0E1           MOVS     R1,SP
   \   000000A4   0500B0E1           MOVS     R0,R5
   \   000000A8   ........           BL       ??getEqualContent
   \   000000AC   0A0000EA           B        ??getWeatherConditions_5
     61                }
     62                if (tag != NULL) { delete tag; tag = NULL; }
   \                     ??getWeatherConditions_4:
   \   000000B0   000056E3           CMP      R6,#+0
   \   000000B4   0300000A           BEQ      ??getWeatherConditions_3
   \   000000B8   0600B0E1           MOVS     R0,R6
   \   000000BC   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   0060B0E1           MOVS     R6,R0
     63              }
     64            }
   \                     ??getWeatherConditions_3:
   \   000000C8   00109DE5           LDR      R1,[SP, #+0]
   \   000000CC   011091E2           ADDS     R1,R1,#+1
   \   000000D0   00108DE5           STR      R1,[SP, #+0]
   \   000000D4   D1FFFFEA           B        ??getWeatherConditions_1
     65            return NULL;
   \                     ??getWeatherConditions_2:
   \   000000D8   0000A0E3           MOV      R0,#+0
   \                     ??getWeatherConditions_5:
   \   000000DC   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000E0   7080BDE8           POP      {R4-R6,PC}       ;; return
     66          }
     67          

   \                                 In segment CODE, align 4, keep-with-next
     68          Weather* getWeather(wchar_t* fileContent, int& pos, wchar_t* xmlContent) {
   \                     ??getWeather:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0050B0E1           MOVS     R5,R0
   \   0000000C   0160B0E1           MOVS     R6,R1
   \   00000010   0270B0E1           MOVS     R7,R2
     69            int* states = new int[0x4];
   \   00000014   1000A0E3           MOV      R0,#+16
   \   00000018   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
     70            for (int i=0;i<4;i++)
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0040B0E1           MOVS     R4,R0
   \                     ??getWeather_1:
   \   00000028   040054E3           CMP      R4,#+4
   \   0000002C   070000AA           BGE      ??getWeather_2
     71              states[i] = getDayState(fileContent,pos);
   \   00000030   0610B0E1           MOVS     R1,R6
   \   00000034   0500B0E1           MOVS     R0,R5
   \   00000038   ........           BL       ??getDayState
   \   0000003C   0410A0E3           MOV      R1,#+4
   \   00000040   918422E0           MLA      R2,R1,R4,R8
   \   00000044   000082E5           STR      R0,[R2, #+0]
   \   00000048   014094E2           ADDS     R4,R4,#+1
   \   0000004C   F5FFFFEA           B        ??getWeather_1
     72            wchar_t* state_ = int2wstr(states[0x0]);
   \                     ??getWeather_2:
   \   00000050   000098E5           LDR      R0,[R8, #+0]
   \   00000054   ........           _BLF     ??int2wstr,??int2wstr??rA
   \   00000058   0090B0E1           MOVS     R9,R0
     73            wchar_t* dayState = getWeatherConditions(state_, xmlContent);
   \   0000005C   0710B0E1           MOVS     R1,R7
   \   00000060   0900B0E1           MOVS     R0,R9
   \   00000064   ........           BL       ??getWeatherConditions
   \   00000068   00008DE5           STR      R0,[SP, #+0]
     74            wchar_t* windDirection = getEqualContent(fileContent,pos);
   \   0000006C   0610B0E1           MOVS     R1,R6
   \   00000070   0500B0E1           MOVS     R0,R5
   \   00000074   ........           BL       ??getEqualContent
   \   00000078   00A0B0E1           MOVS     R10,R0
     75            wchar_t* longWind = getWeatherConditions(windDirection, xmlContent);
   \   0000007C   0710B0E1           MOVS     R1,R7
   \   00000080   0A00B0E1           MOVS     R0,R10
   \   00000084   ........           BL       ??getWeatherConditions
   \   00000088   04008DE5           STR      R0,[SP, #+4]
     76            Weather* todayWeather = new Weather(states[0x0],states[0x1],states[0x2],states[0x3],dayState,windDirection,longWind);
   \   0000008C   2000A0E3           MOV      R0,#+32
   \   00000090   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000094   0040B0E1           MOVS     R4,R0
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0F00000A           BEQ      ??getWeather_3
   \   000000A0   04009DE5           LDR      R0,[SP, #+4]
   \   000000A4   01002DE9           PUSH     {R0}
   \   000000A8   0A00B0E1           MOVS     R0,R10
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   08009DE5           LDR      R0,[SP, #+8]
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   0C0098E5           LDR      R0,[R8, #+12]
   \   000000BC   01002DE9           PUSH     {R0}
   \   000000C0   083098E5           LDR      R3,[R8, #+8]
   \   000000C4   042098E5           LDR      R2,[R8, #+4]
   \   000000C8   001098E5           LDR      R1,[R8, #+0]
   \   000000CC   0400B0E1           MOVS     R0,R4
   \   000000D0   ........           _BLF     ??Weather,??Weather??rA
   \   000000D4   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   000000D8   04B0B0E1           MOVS     R11,R4
   \   000000DC   000000EA           B        ??getWeather_4
   \                     ??getWeather_3:
   \   000000E0   00B0A0E3           MOV      R11,#+0
     77            delete states; states = NULL;
   \                     ??getWeather_4:
   \   000000E4   0800B0E1           MOVS     R0,R8
   \   000000E8   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   0080B0E1           MOVS     R8,R0
     78            delete state_; state_ = NULL;
   \   000000F4   0900B0E1           MOVS     R0,R9
   \   000000F8   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   000000FC   0000A0E3           MOV      R0,#+0
   \   00000100   0090B0E1           MOVS     R9,R0
     79            return todayWeather;
   \   00000104   0B00B0E1           MOVS     R0,R11
   \   00000108   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   0000010C   F08FBDE8           POP      {R4-R11,PC}      ;; return
     80          }
     81          

   \                                 In segment CODE, align 4, keep-with-next
     82          Weather* getDayWeather(wchar_t* fileContent, int& i, wchar_t* xmlContent) {
   \                     ??getDayWeather:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
   \   0000000C   0150B0E1           MOVS     R5,R1
   \   00000010   0260B0E1           MOVS     R6,R2
     83              Weather* todayWeather = NULL;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   0070B0E1           MOVS     R7,R0
     84          
     85          
     86              while (i < wstrlen(fileContent)) {
   \                     ??getDayWeather_1:
   \   0000001C   008095E5           LDR      R8,[R5, #+0]
   \   00000020   0400B0E1           MOVS     R0,R4
   \   00000024   570100EF           SWI      +343
   \   00000028   000058E1           CMP      R8,R0
   \   0000002C   2C0000AA           BGE      ??getDayWeather_2
     87          
     88                if (fileContent[i] == '<' && fileContent[i+0x1] == 'P') {
   \   00000030   000095E5           LDR      R0,[R5, #+0]
   \   00000034   0210A0E3           MOV      R1,#+2
   \   00000038   914020E0           MLA      R0,R1,R0,R4
   \   0000003C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000040   3C0050E3           CMP      R0,#+60
   \   00000044   2200001A           BNE      ??getDayWeather_3
   \   00000048   000095E5           LDR      R0,[R5, #+0]
   \   0000004C   0210A0E3           MOV      R1,#+2
   \   00000050   914020E0           MLA      R0,R1,R0,R4
   \   00000054   B200D0E1           LDRH     R0,[R0, #+2]
   \   00000058   500050E3           CMP      R0,#+80
   \   0000005C   1C00001A           BNE      ??getDayWeather_3
     89                  int sizeOfTag = 0;
   \   00000060   0010A0E3           MOV      R1,#+0
   \   00000064   00108DE5           STR      R1,[SP, #+0]
     90                  wchar_t* tag = getTag(fileContent,i,sizeOfTag);
   \   00000068   0D20B0E1           MOVS     R2,SP
   \   0000006C   001095E5           LDR      R1,[R5, #+0]
   \   00000070   0400B0E1           MOVS     R0,R4
   \   00000074   ........           BL       ??getTag
   \   00000078   0080B0E1           MOVS     R8,R0
     91                  i += sizeOfTag;
   \   0000007C   000095E5           LDR      R0,[R5, #+0]
   \   00000080   00109DE5           LDR      R1,[SP, #+0]
   \   00000084   000091E0           ADDS     R0,R1,R0
   \   00000088   000085E5           STR      R0,[R5, #+0]
     92          
     93                  wchar_t* today = getDate();
   \   0000008C   ........           BL       ??getDate
   \   00000090   0090B0E1           MOVS     R9,R0
     94                  if (compareWchar(tag,today))
   \   00000094   0910B0E1           MOVS     R1,R9
   \   00000098   0800B0E1           MOVS     R0,R8
   \   0000009C   ........           _BLF     ??compareWchar,??compareWchar??rA
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0400000A           BEQ      ??getDayWeather_4
     95                    todayWeather = getWeather(fileContent,i, xmlContent);
   \   000000A8   0620B0E1           MOVS     R2,R6
   \   000000AC   0510B0E1           MOVS     R1,R5
   \   000000B0   0400B0E1           MOVS     R0,R4
   \   000000B4   ........           BL       ??getWeather
   \   000000B8   0070B0E1           MOVS     R7,R0
     96                  delete tag;
   \                     ??getDayWeather_4:
   \   000000BC   0800B0E1           MOVS     R0,R8
   \   000000C0   ........           _BLF     `??operator delete`,`??operator delete??rA`
     97                  delete today;
   \   000000C4   0900B0E1           MOVS     R0,R9
   \   000000C8   ........           _BLF     `??operator delete`,`??operator delete??rA`
     98                  if (todayWeather != NULL) break;
   \   000000CC   000057E3           CMP      R7,#+0
   \   000000D0   0300001A           BNE      ??getDayWeather_2
     99                 }
    100                i++;
   \                     ??getDayWeather_3:
   \   000000D4   000095E5           LDR      R0,[R5, #+0]
   \   000000D8   010090E2           ADDS     R0,R0,#+1
   \   000000DC   000085E5           STR      R0,[R5, #+0]
   \   000000E0   CDFFFFEA           B        ??getDayWeather_1
    101              }
    102              
    103             return todayWeather;
   \                     ??getDayWeather_2:
   \   000000E4   0700B0E1           MOVS     R0,R7
   \   000000E8   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000EC   F083BDE8           POP      {R4-R9,PC}       ;; return
    104          }

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x3c\\x50\\x65\\x72\\x69\\x6f\\x64\\x20\\`:
   \   00000000   3C0050006500       DC8 3CH, 0, 50H, 0, 65H, 0, 72H, 0
   \              7200        
   \   00000008   69006F006400       DC8 69H, 0, 6FH, 0, 64H, 0, 20H, 0
   \              2000        
   \   00000010   530074006100       DC8 53H, 0, 74H, 0, 61H, 0, 72H, 0
   \              7200        
   \   00000018   740044006100       DC8 74H, 0, 44H, 0, 61H, 0, 74H, 0
   \              7400        
   \   00000020   65003D002200       DC8 65H, 0, 3DH, 0, 22H, 0, 25H, 0
   \              2500        
   \   00000028   75002F002500       DC8 75H, 0, 2FH, 0, 25H, 0, 64H, 0
   \              6400        
   \   00000030   2F0025006400       DC8 2FH, 0, 25H, 0, 64H, 0, 22H, 0
   \              2200        
   \   00000038   3E000000           DC8 3EH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x25\\x64">`:
   \   00000000   250064000000       DC8 25H, 0, 64H, 0, 0, 0
   \   00000006   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     getDate()                         24
     getDayState(wchar_t *, int &)     20
     getDayWeather(wchar_t *, int &, wchar_t *)
                                       32
     getEqualContent(wchar_t *, int &)
                                       20
     getLocation(wchar_t *, int &)     16
     getTag(wchar_t *, int, int &)     24
     getWeather(wchar_t *, int &, wchar_t *)
                                       60
     getWeatherConditions(wchar_t *, wchar_t *)
                                       20


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     getDate()                        96
     getTag(wchar_t *, int, int &)   220
     getEqualContent(wchar_t *, int &)
                                      88
     getDayState(wchar_t *, int &)    88
     getLocation(wchar_t *, int &)   120
     getWeatherConditions(wchar_t *, wchar_t *)
                                     228
     getWeather(wchar_t *, int &, wchar_t *)
                                     272
     getDayWeather(wchar_t *, int &, wchar_t *)
                                     240
     ?<Constant L"\x3c\x50\x65\x72\x69\x6f\x64\x20\
                                      60
     ?<Constant L"\x25\x64">           8
      Others                         128

 
 1 480 bytes in segment CODE
    68 bytes in segment DATA_C
 
 1 352 bytes of CODE  memory (+ 128 bytes shared)
    68 bytes of CONST memory

Errors: none
Warnings: none
