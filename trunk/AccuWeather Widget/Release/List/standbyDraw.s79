//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   06/Jun/2011  22:25:10 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  C:\Documents and Settings\Davi\Desktop\StudyElf\Acc /
//                       uWeather Widget\standby\standbyDraw.cpp             /
//    Command line    =  "C:\Documents and Settings\Davi\Desktop\StudyElf\Ac /
//                       cuWeather Widget\standby\standbyDraw.cpp" -lC       /
//                       "C:\Documents and Settings\Davi\Desktop\StudyElf\Ac /
//                       cuWeather Widget\Release\List\" -lA "C:\Documents   /
//                       and Settings\Davi\Desktop\StudyElf\AccuWeather      /
//                       Widget\Release\List\" -o "C:\Documents and          /
//                       Settings\Davi\Desktop\StudyElf\AccuWeather          /
//                       Widget\Release\Obj\" -s9 --no_unroll --no_inline    /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork -e --fpu None --eec++   /
//                       --dlib_config "C:\Documents and                     /
//                       Settings\Davi\Desktop\IAR\Embedded Workbench 4.0    /
//                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I "C:\Documents  /
//                       and Settings\Davi\Desktop\IAR\Embedded Workbench    /
//                       4.0 Evaluation\ARM\INC\"                            /
//    List file       =  C:\Documents and Settings\Davi\Desktop\StudyElf\Acc /
//                       uWeather Widget\Release\List\standbyDraw.s79        /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME standbyDraw

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBWEAK `?*?DATA_ID`
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable11 EQU 0
??DataTable12 EQU 0
??DataTable13 EQU 0
??DataTable14 EQU 0
??DataTable15 EQU 0
??DataTable18 EQU 0
??DataTable19 EQU 0
??DataTable2 EQU 0
??DataTable20 EQU 0
??DataTable21 EQU 0
??DataTable22 EQU 0
??DataTable23 EQU 0
??DataTable24 EQU 0
??DataTable25 EQU 0
??DataTable26 EQU 0
??DataTable27 EQU 0
??DataTable28 EQU 0
??DataTable3 EQU 0
??DataTable30 EQU 0
??DataTable31 EQU 0
??DataTable34 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        PUBLIC ??DestroyImages
        FUNCTION ??DestroyImages,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??DestroyImages??rT
        PUBLIC ??Draw
        FUNCTION ??Draw,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??Draw??rT
        PUBLIC ??InitImages
        FUNCTION ??InitImages,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??InitImages??rT
        PUBWEAK ??LPARAM
        FUNCTION ??LPARAM,0203H
        MULTWEAK ??LPARAM??rA
        PUBLIC ??SB_ELF_Killed
        FUNCTION ??SB_ELF_Killed,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??SB_ELF_Killed??rT
        PUBLIC ??Send_REDRAW_RELEASE
        FUNCTION ??Send_REDRAW_RELEASE,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??Send_REDRAW_RELEASE??rT
        MULTWEAK ??__floatToDouble??rA
        MULTWEAK ??__longToFloat??rA
        MULTWEAK ??addCursor??rA
        PUBLIC ??beginFile
        FUNCTION ??beginFile,0203H
        LOCFRAME CSTACK, 32, STACK
        MULTWEAK ??beginFile??rT
        PUBLIC ??checkWallpaper
        FUNCTION ??checkWallpaper,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??checkWallpaper??rT
        MULTWEAK ??donothing??rA
        PUBLIC ??drawForShadow
        FUNCTION ??drawForShadow,0203H
        LOCFRAME CSTACK, 36, STACK
        MULTWEAK ??drawForShadow??rT
        PUBLIC ??drawOnStby
        FUNCTION ??drawOnStby,0203H
        LOCFRAME CSTACK, 64, STACK
        MULTWEAK ??drawOnStby??rT
        PUBLIC ??drawWeatherContents
        FUNCTION ??drawWeatherContents,0203H
        LOCFRAME CSTACK, 60, STACK
        MULTWEAK ??drawWeatherContents??rT
        PUBLIC ??drawWeatherInfo
        FUNCTION ??drawWeatherInfo,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??drawWeatherInfo??rT
        PUBLIC ??errorInFile
        FUNCTION ??errorInFile,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??errorInFile??rT
        PUBLIC ??finalDraw
        FUNCTION ??finalDraw,0203H
        LOCFRAME CSTACK, 60, STACK
        MULTWEAK ??finalDraw??rT
        MULTWEAK ??freeMyVars??rA
        MULTWEAK ??freeWDraw??rA
        MULTWEAK ??getAverageTemp??rA
        MULTWEAK ??getBook??rA
        MULTWEAK ??getCursor??rA
        MULTWEAK ??getDateTime??rA
        MULTWEAK ??getDayWeather??rA
        MULTWEAK ??getDayWeather??rA_1
        MULTWEAK ??getError??rA
        MULTWEAK ??getGC??rA
        MULTWEAK ??getHourSeted??rA
        MULTWEAK ??getLocation??rA
        MULTWEAK ??getLocation??rA_1
        MULTWEAK ??getLongWind??rA
        MULTWEAK ??getNightWeather??rA
        MULTWEAK ??getState??rA
        MULTWEAK ??getState_??rA
        MULTWEAK ??getTempMax??rA
        MULTWEAK ??getTempMin??rA
        MULTWEAK ??getWSubStr??rA
        MULTWEAK ??getWeather??rA
        MULTWEAK ??getWeatherToDraw??rA
        MULTWEAK ??getWindDirection??rA
        MULTWEAK ??getWindSpeed??rA
        MULTWEAK ??intlen??rA
        MULTWEAK ??isDateEqual??rA
        PUBLIC ??manageCursor
        FUNCTION ??manageCursor,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??manageCursor??rT
        PUBLIC ??onCloseBEBook
        FUNCTION ??onCloseBEBook,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??onCloseBEBook??rT
        PUBLIC ??onfTimer
        FUNCTION ??onfTimer,0603H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??onfTimer??rT
        MULTWEAK ??openFile??rA
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new??rA`
        MULTWEAK `??operator new[]??rA`
        PUBLIC ??returnMask
        FUNCTION ??returnMask,0203H
        LOCFRAME CSTACK, 40, STACK
        MULTWEAK ??returnMask??rT
        MULTWEAK ??searchLine??rA
        MULTWEAK ??setCursor??rA
        MULTWEAK ??setDayWeather??rA
        MULTWEAK ??setError??rA
        MULTWEAK ??setHour??rA
        MULTWEAK ??setLocation??rA
        MULTWEAK ??setNightWeather??rA
        MULTWEAK ??setWDraw??rA
        MULTWEAK ??wGetIndexOfLine??rA
        PUBWEAK ?init?tab?DATA_I
        PUBLIC SIonRedraw
        PUBLIC StatusIndication
        PUBLIC bgID
        PUBLIC bgImages
        PUBLIC mybook
        PUBLIC stateImages
        PUBLIC statesID
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        









































__floatToDouble     SYMBOL "__floatToDouble"
__longToFloat       SYMBOL "__longToFloat"

??DestroyImages??rT SYMBOL "??rT", ??DestroyImages

??Draw??rT          SYMBOL "??rT", ??Draw

??InitImages??rT    SYMBOL "??rT", ??InitImages

??LPARAM??rA        SYMBOL "??rA", ??LPARAM

??SB_ELF_Killed??rT SYMBOL "??rT", ??SB_ELF_Killed

??Send_REDRAW_RELEASE??rT SYMBOL "??rT", ??Send_REDRAW_RELEASE
??__floatToDouble??rA SYMBOL "??rA", __floatToDouble
??__longToFloat??rA SYMBOL "??rA", __longToFloat
??addCursor??rA     SYMBOL "??rA", ??addCursor

??beginFile??rT     SYMBOL "??rT", ??beginFile

??checkWallpaper??rT SYMBOL "??rT", ??checkWallpaper
??donothing??rA     SYMBOL "??rA", ??donothing

??drawForShadow??rT SYMBOL "??rT", ??drawForShadow

??drawOnStby??rT    SYMBOL "??rT", ??drawOnStby

??drawWeatherContents??rT SYMBOL "??rT", ??drawWeatherContents

??drawWeatherInfo??rT SYMBOL "??rT", ??drawWeatherInfo

??errorInFile??rT   SYMBOL "??rT", ??errorInFile

??finalDraw??rT     SYMBOL "??rT", ??finalDraw
??freeMyVars??rA    SYMBOL "??rA", ??freeMyVars
??freeWDraw??rA     SYMBOL "??rA", ??freeWDraw
??getAverageTemp??rA SYMBOL "??rA", ??getAverageTemp
??getBook??rA       SYMBOL "??rA", ??getBook
??getCursor??rA     SYMBOL "??rA", ??getCursor
??getDateTime??rA   SYMBOL "??rA", ??getDateTime
??getDayWeather??rA SYMBOL "??rA", ??getDayWeather
??getDayWeather??rA_1 SYMBOL "??rA", ??getDayWeather_1
??getError??rA      SYMBOL "??rA", ??getError
??getGC??rA         SYMBOL "??rA", ??getGC
??getHourSeted??rA  SYMBOL "??rA", ??getHourSeted
??getLocation??rA   SYMBOL "??rA", ??getLocation
??getLocation??rA_1 SYMBOL "??rA", ??getLocation_1
??getLongWind??rA   SYMBOL "??rA", ??getLongWind
??getNightWeather??rA SYMBOL "??rA", ??getNightWeather
??getState??rA      SYMBOL "??rA", ??getState
??getState_??rA     SYMBOL "??rA", ??getState_
??getTempMax??rA    SYMBOL "??rA", ??getTempMax
??getTempMin??rA    SYMBOL "??rA", ??getTempMin
??getWSubStr??rA    SYMBOL "??rA", ??getWSubStr
??getWeather??rA    SYMBOL "??rA", ??getWeather
??getWeatherToDraw??rA SYMBOL "??rA", ??getWeatherToDraw
??getWindDirection??rA SYMBOL "??rA", ??getWindDirection
??getWindSpeed??rA  SYMBOL "??rA", ??getWindSpeed
??intlen??rA        SYMBOL "??rA", ??intlen
??isDateEqual??rA   SYMBOL "??rA", ??isDateEqual

??manageCursor??rT  SYMBOL "??rT", ??manageCursor

??onCloseBEBook??rT SYMBOL "??rT", ??onCloseBEBook

??onfTimer??rT      SYMBOL "??rT", ??onfTimer
??openFile??rA      SYMBOL "??rA", ??openFile
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new??rA` SYMBOL "??rA", `??operator new`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`

??returnMask??rT    SYMBOL "??rT", ??returnMask
??searchLine??rA    SYMBOL "??rA", ??searchLine
??setCursor??rA     SYMBOL "??rA", ??setCursor
??setDayWeather??rA SYMBOL "??rA", ??setDayWeather
??setError??rA      SYMBOL "??rA", ??setError
??setHour??rA       SYMBOL "??rA", ??setHour
??setLocation??rA   SYMBOL "??rA", ??setLocation
??setNightWeather??rA SYMBOL "??rA", ??setNightWeather
??setWDraw??rA      SYMBOL "??rA", ??setWDraw
??wGetIndexOfLine??rA SYMBOL "??rA", ??wGetIndexOfLine

        EXTERN ??addCursor
        FUNCTION ??addCursor,0202H
        EXTERN ??celsiusToFahrenheit
        FUNCTION ??celsiusToFahrenheit,0602H
        EXTERN ??donothing
        FUNCTION ??donothing,0202H
        EXTERN ??elf_exit
        FUNCTION ??elf_exit,0602H
        EXTERN ??freeMyVars
        FUNCTION ??freeMyVars,0202H
        EXTERN ??freeWDraw
        FUNCTION ??freeWDraw,0202H
        EXTERN ??getAverageTemp
        FUNCTION ??getAverageTemp,0202H
        EXTERN ??getBook
        FUNCTION ??getBook,0202H
        EXTERN ??getCursor
        FUNCTION ??getCursor,0202H
        EXTERN ??getDateTime
        FUNCTION ??getDateTime,0202H
        EXTERN ??getDayWeather
        FUNCTION ??getDayWeather,0202H
        EXTERN ??getDayWeather_1
        FUNCTION ??getDayWeather_1,0202H
        EXTERN ??getError
        FUNCTION ??getError,0202H
        EXTERN ??getGC
        FUNCTION ??getGC,0202H
        EXTERN ??getHourSeted
        FUNCTION ??getHourSeted,0202H
        EXTERN ??getLocation
        FUNCTION ??getLocation,0202H
        EXTERN ??getLocation_1
        FUNCTION ??getLocation_1,0202H
        EXTERN ??getLongWind
        FUNCTION ??getLongWind,0202H
        EXTERN ??getNightWeather
        FUNCTION ??getNightWeather,0202H
        EXTERN ??getState
        FUNCTION ??getState,0202H
        EXTERN ??getState_
        FUNCTION ??getState_,0202H
        EXTERN ??getTempMax
        FUNCTION ??getTempMax,0202H
        EXTERN ??getTempMin
        FUNCTION ??getTempMin,0202H
        EXTERN ??getWSubStr
        FUNCTION ??getWSubStr,0202H
        EXTERN ??getWeather
        FUNCTION ??getWeather,0202H
        EXTERN ??getWeatherToDraw
        FUNCTION ??getWeatherToDraw,0202H
        EXTERN ??getWindDirection
        FUNCTION ??getWindDirection,0202H
        EXTERN ??getWindSpeed
        FUNCTION ??getWindSpeed,0202H
        EXTERN ??intlen
        FUNCTION ??intlen,0202H
        EXTERN ??isDateEqual
        FUNCTION ??isDateEqual,0202H
        EXTERN ??km2Mile
        FUNCTION ??km2Mile,0602H
        EXTERN ??km2meter
        FUNCTION ??km2meter,0602H
        EXTERN ??openFile
        FUNCTION ??openFile,0202H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new`
        FUNCTION `??operator new`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ??searchLine
        FUNCTION ??searchLine,0202H
        EXTERN ??setCursor
        FUNCTION ??setCursor,0202H
        EXTERN ??setDayWeather
        FUNCTION ??setDayWeather,0202H
        EXTERN ??setError
        FUNCTION ??setError,0202H
        EXTERN ??setHour
        FUNCTION ??setHour,0202H
        EXTERN ??setLocation
        FUNCTION ??setLocation,0202H
        EXTERN ??setNightWeather
        FUNCTION ??setNightWeather,0202H
        EXTERN ??setWDraw
        FUNCTION ??setWDraw,0202H
        EXTERN ??wGetIndexOfLine
        FUNCTION ??wGetIndexOfLine,0202H
        EXTERN BCFG_HideOnMusic
        EXTERN BCFG_Images_AccuWeatherLogo_Enable
        EXTERN BCFG_Images_AccuWeatherLogo_Position_X
        EXTERN BCFG_Images_AccuWeatherLogo_Position_Y
        EXTERN BCFG_Images_Background_Enable
        EXTERN BCFG_Images_Background_Method
        EXTERN BCFG_Images_Background_Position_X
        EXTERN BCFG_Images_Background_Position_Y
        EXTERN BCFG_Images_DayState_Enable
        EXTERN BCFG_Images_DayState_Position_X
        EXTERN BCFG_Images_DayState_Position_Y
        EXTERN BCFG_Images_ImageOnTop
        EXTERN BCFG_Path_Background
        EXTERN BCFG_Path_Background_DayAndNightBG
        EXTERN BCFG_Path_Background_StaticBackground
        EXTERN BCFG_RefreshTime
        EXTERN BCFG_StatesFolder
        EXTERN BCFG_Tags_AverageTemperature_Align
        EXTERN BCFG_Tags_AverageTemperature_Enable
        EXTERN BCFG_Tags_AverageTemperature_EnableShadow
        EXTERN BCFG_Tags_AverageTemperature_FontSize
        EXTERN BCFG_Tags_AverageTemperature_Mask
        EXTERN BCFG_Tags_AverageTemperature_Position_X
        EXTERN BCFG_Tags_AverageTemperature_Position_Y
        EXTERN BCFG_Tags_AverageTemperature_ShadowColor
        EXTERN BCFG_Tags_AverageTemperature_TextColor
        EXTERN BCFG_Tags_AverageTemperature_Unit
        EXTERN BCFG_Tags_DayState_Align
        EXTERN BCFG_Tags_DayState_Enable
        EXTERN BCFG_Tags_DayState_EnableShadow
        EXTERN BCFG_Tags_DayState_FontSize
        EXTERN BCFG_Tags_DayState_LineSpacing
        EXTERN BCFG_Tags_DayState_Position_X
        EXTERN BCFG_Tags_DayState_Position_Y
        EXTERN BCFG_Tags_DayState_ShadowColor
        EXTERN BCFG_Tags_DayState_TextColor
        EXTERN BCFG_Tags_Location_Align
        EXTERN BCFG_Tags_Location_Enable
        EXTERN BCFG_Tags_Location_EnableShadow
        EXTERN BCFG_Tags_Location_FontSize
        EXTERN BCFG_Tags_Location_Position_X
        EXTERN BCFG_Tags_Location_Position_Y
        EXTERN BCFG_Tags_Location_ShadowColor
        EXTERN BCFG_Tags_Location_TextColor
        EXTERN BCFG_Tags_MaxTemperature_Align
        EXTERN BCFG_Tags_MaxTemperature_Enable
        EXTERN BCFG_Tags_MaxTemperature_EnableShadow
        EXTERN BCFG_Tags_MaxTemperature_FontSize
        EXTERN BCFG_Tags_MaxTemperature_Mask
        EXTERN BCFG_Tags_MaxTemperature_Position_X
        EXTERN BCFG_Tags_MaxTemperature_Position_Y
        EXTERN BCFG_Tags_MaxTemperature_ShadowColor
        EXTERN BCFG_Tags_MaxTemperature_TextColor
        EXTERN BCFG_Tags_MaxTemperature_Unit
        EXTERN BCFG_Tags_MinTemperature_Align
        EXTERN BCFG_Tags_MinTemperature_Enable
        EXTERN BCFG_Tags_MinTemperature_EnableShadow
        EXTERN BCFG_Tags_MinTemperature_FontSize
        EXTERN BCFG_Tags_MinTemperature_Mask
        EXTERN BCFG_Tags_MinTemperature_Position_X
        EXTERN BCFG_Tags_MinTemperature_Position_Y
        EXTERN BCFG_Tags_MinTemperature_ShadowColor
        EXTERN BCFG_Tags_MinTemperature_TextColor
        EXTERN BCFG_Tags_MinTemperature_Unit
        EXTERN BCFG_Tags_Time_Day
        EXTERN BCFG_Tags_Time_Night
        EXTERN BCFG_Tags_WindDirection_Align
        EXTERN BCFG_Tags_WindDirection_Enable
        EXTERN BCFG_Tags_WindDirection_EnableShadow
        EXTERN BCFG_Tags_WindDirection_FontSize
        EXTERN BCFG_Tags_WindDirection_Format
        EXTERN BCFG_Tags_WindDirection_Position_X
        EXTERN BCFG_Tags_WindDirection_Position_Y
        EXTERN BCFG_Tags_WindDirection_ShadowColor
        EXTERN BCFG_Tags_WindDirection_TextColor
        EXTERN BCFG_Tags_WindSpeed_Align
        EXTERN BCFG_Tags_WindSpeed_Enable
        EXTERN BCFG_Tags_WindSpeed_EnableShadow
        EXTERN BCFG_Tags_WindSpeed_FontSize
        EXTERN BCFG_Tags_WindSpeed_Mask
        EXTERN BCFG_Tags_WindSpeed_Position_X
        EXTERN BCFG_Tags_WindSpeed_Position_Y
        EXTERN BCFG_Tags_WindSpeed_ShadowColor
        EXTERN BCFG_Tags_WindSpeed_TextColor
        EXTERN BCFG_Tags_WindSpeed_Unit
        EXTERN BCFG_WidgetPosition_X
        EXTERN BCFG_WidgetPosition_Y
        EXTERN BCFG_XMLBGLogoFolder
        EXTERN __floatToDouble
        FUNCTION __floatToDouble,0202H
        EXTERN __longToFloat
        FUNCTION __longToFloat,0202H

// C:\Documents and Settings\Davi\Desktop\StudyElf\AccuWeather Widget\standby\standbyDraw.cpp
//    1 #include "..\..\include\Lib_Clara.h"

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function ??LPARAM
        ARM
// __??Code32?? __code __interwork __atpcs LPARAM::LPARAM(int)
??LPARAM:
        STR      R1,[R0, #+0]
        BX       LR               ;; return
        CFI EndBlock cfiBlock0

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI NoFunction
        THUMB
??Send_REDRAW_RELEASE??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock1
        REQUIRE ??Send_REDRAW_RELEASE
//    2 #include "..\..\include\Dir.h"
//    3 #include "..\..\include\cfg_items.h"
//    4 #include "..\bcfg\config_data.h"
//    5 #include "..\bcfg\conf_loader.h"
//    6 #include "..\file\openfile.h"
//    7 #include "..\file\fileAnaliser.h"
//    8 #include "..\utils\weather.h"
//    9 #include "..\utils\utils.h"
//   10 #include "..\mybook.h"
//   11 #include "standbyDraw.h"
//   12 #include "stdby.h"

        RSEG DATA_I:DATA:SORT:NOROOT(2)
// wchar_t __data statesID[72]
statesID:
        DS8 144
        REQUIRE `?<Initializer for statesID>`
// wchar_t __data bgID[32]
bgID:
        DS8 64
        REQUIRE `?<Initializer for bgID>`
// void (*__data SIonRedraw)(DISP_OBJ *, int, int, int)
SIonRedraw:
        DS8 4
        REQUIRE `?<Initializer for SIonRedraw>`
// DISP_OBJ *__data StatusIndication
StatusIndication:
        DS8 4
        REQUIRE `?<Initializer for StatusIndication>`
// wchar_t *__data stateImages[68]
stateImages:
        DS8 272
        REQUIRE `?<Initializer for stateImages>`
// wchar_t *__data bgImages[32]
bgImages:
        DS8 128
        REQUIRE `?<Initializer for bgImages>`
//   13 
//   14 MyBook* mybook;
mybook:
        DS8 4
        REQUIRE `?<Initializer for mybook>`
//   15 
//   16 //<!--bookmanager

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function ??Send_REDRAW_RELEASE
        ARM
//   17 void Send_REDRAW_RELEASE() {
??Send_REDRAW_RELEASE:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
//   18   REDRAW_RELEASE_MESSAGE * sbm= new REDRAW_RELEASE_MESSAGE;
        MOV      R0,#+24
        _BLF     `??operator new`,`??operator new??rA`
        MOV      R4,R0
//   19   memset(sbm,0,sizeof(REDRAW_RELEASE_MESSAGE));
        MOV      R2,#+24
        MOV      R1,#+0
        SWI      +274
//   20   sbm->SB_OldOnRedraw=SIonRedraw;
        LDR      R0,??Send_REDRAW_RELEASE_1  ;; statesID + 208
        LDR      R0,[R0, #+0]
        STR      R0,[R4, #+0]
//   21   sbm->SB_NewOnRedraw=Draw;
        LDR      R0,??DataTable0  ;; ??Draw
        STR      R0,[R4, #+4]
//   22   UI_Event_wData(SBY_REDRAW_RELEASE_EVENT ,sbm,(void (*)(void*))mfree_adr());
        SWI      +33028
        MOV      R2,R0
        MOV      R1,R4
        MOV      R0,#+227
        ORR      R0,R0,#0x300
        SWI      +425
//   23 }
        POP      {R4,PC}          ;; return
        DATA
??Send_REDRAW_RELEASE_1:
        DC32     statesID + 208
        CFI EndBlock cfiBlock2

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable0:
        DC32     ??Draw

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI NoFunction
        THUMB
??drawOnStby??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock3
        REQUIRE ??drawOnStby
//   24 
//   25 
//   26 //-->
//   27 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function ??drawOnStby
        ARM
//   28 void drawOnStby(wchar_t* message, int fontSize, int align, int x, int y, int textColor ) {
??drawOnStby:
        PUSH     {R2,R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+40
        LDR      R7,[SP, #+40]
        LDR      R8,[SP, #+44]
        MOV      R4,R0
        MOV      R5,R1
        MOV      R6,R3
//   29   int displayWidth = Display_GetWidth( 0 );
        MOV      R0,#+0
        SWI      +601
        MOV      R10,R0
//   30   int displayHeigth = Display_GetHeight( 0 );
        MOV      R0,#+0
        SWI      +600
        MOV      R11,R0
//   31   int msgSize = wstrlen(message);
        MOV      R0,R4
        SWI      +343
        MOV      R9,R0
//   32   if (searchLine(message)) {
        MOV      R0,R4
        _BLF     ??searchLine,??searchLine??rA
        CMP      R0,#+0
        BEQ      ??drawOnStby_1
//   33     int indexLine = wGetIndexOfLine(message);
        MOV      R0,R4
        _BLF     ??wGetIndexOfLine,??wGetIndexOfLine??rA
        MOV      R9,R0
//   34     wchar_t* line1 = getWSubStr(message,0,indexLine-1);
        SUB      R2,R9,#+1
        MOV      R1,#+0
        MOV      R0,R4
        _BLF     ??getWSubStr,??getWSubStr??rA
        MOV      R10,R0
//   35     wchar_t* line2 = getWSubStr(message,indexLine+2,wstrlen(message));
        MOV      R0,R4
        SWI      +343
        MOV      R2,R0
        ADD      R1,R9,#+2
        MOV      R0,R4
        _BLF     ??getWSubStr,??getWSubStr??rA
        MOV      R4,R0
//   36     msgSize = wstrlen(line1);
        MOV      R0,R10
        SWI      +343
//   37     
//   38     TEXTID drawText = TextID_Create(line1, ENC_UCS2 , msgSize);
        MOV      R2,R0
        MOV      R1,#+0
        MOV      R0,R10
        SWI      +349
        MOV      R9,R0
//   39     SetFont(fontSize);
        MOV      R0,R5
        SWI      +497
//   40 #if defined(DB3210)|| defined(DB3200) || defined (DB3350)
//   41     DrawString( drawText , align , x , y , displayWidth, displayHeigth , 0 , 0 , textColor , textColor );
//   42 #elif defined(DB3150) || defined(DB2020)
//   43     DrawString( drawText , align , x , y , displayWidth, displayHeigth , 60 , 0x05 , textColor , textColor );    
//   44 #endif
//   45     TextID_Destroy( drawText );
        MOV      R0,R9
        SWI      +353
//   46 
//   47     delete line1; 
        MOV      R0,R10
        _BLF     `??operator delete`,`??operator delete??rA`
//   48     line1 = NULL;
//   49     drawOnStby(line2, fontSize, align, x, y + BCFG_Tags_DayState_LineSpacing, textColor );
        LDR      R0,??drawOnStby_2  ;; BCFG_Tags_DayState_LineSpacing
        PUSH     {R8}
        CFI CFA R13+44
        LDR      R0,[R0, #+0]
        MOV      R3,R6
        ADD      R0,R0,R7
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R2,[SP, #+8]
        MOV      R1,R5
        MOV      R0,R4
        BL       ??drawOnStby
//   50     delete line2;
        MOV      R0,R4
        _BLF     `??operator delete`,`??operator delete??rA`
//   51     line2 = NULL;
        ADD      SP,SP,#+8
        CFI CFA R13+40
        POP      {R0,R4-R11,PC}
//   52   }
//   53   else {
//   54     TEXTID drawText = TextID_Create(message, ENC_UCS2 , msgSize);
??drawOnStby_1:
        MOV      R2,R9
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +349
        MOV      R4,R0
//   55     SetFont(fontSize);
        MOV      R0,R5
        SWI      +497
//   56     DrawString( drawText , align , x , y , displayWidth, displayHeigth , 60 , 0x05 , textColor , textColor );
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+44
        PUSH     {R8}
        CFI CFA R13+48
        MOV      R3,R7
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+52
        MOV      R2,R6
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+56
        PUSH     {R11}
        CFI CFA R13+60
        PUSH     {R10}
        CFI CFA R13+64
        LDR      R1,[SP, #+24]
        MOV      R0,R4
        SWI      +493
//   57     TextID_Destroy( drawText );
        MOV      R0,R4
        SWI      +353
        ADD      SP,SP,#+24
        CFI CFA R13+40
//   58   }
//   59 }
        POP      {R0,R4-R11,PC}   ;; return
        DATA
??drawOnStby_2:
        DC32     BCFG_Tags_DayState_LineSpacing
        CFI EndBlock cfiBlock4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI NoFunction
        THUMB
??Draw??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock5
        REQUIRE ??Draw
//   60 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function ??Draw
        ARM
//   61 void Draw(DISP_OBJ* db,int r1, int r2,int r3) { //change lines for w800
??Draw:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
//   62   if (SIonRedraw) SIonRedraw(db,r1,r2,r3);
        LDR      R4,??DataTable29  ;; statesID
        LDR      R12,[R4, #+208]
        CMP      R12,#+0
        BEQ      ??Draw_1
        BLX      R12
//   63   BCFG_HideOnMusic ? (!FindBook(get_IsAudioPlayerBook()) ? drawWeatherContents() : mybook->donothing() ) : drawWeatherContents();
??Draw_1:
        LDR      R0,??Draw_2      ;; BCFG_HideOnMusic
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??Draw_3
        SWI      +33419
        SWI      +304
        CMP      R0,#+0
        BEQ      ??Draw_3
        LDR      R0,[R4, #+616]
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        _BF      ??donothing,??donothing??rA  ;; tailcall
        CFI R4 Frame(CFA, -8)
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+8
??Draw_3:
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        B        ??drawWeatherContents  ;; tailcall
        DATA
??Draw_2:
        DC32     BCFG_HideOnMusic
        CFI EndBlock cfiBlock6
//   64 
//   65 } 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI NoFunction
        THUMB
??drawForShadow??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock7
        REQUIRE ??drawForShadow
//   66 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI Function ??drawForShadow
        ARM
//   67 void drawForShadow( wchar_t* message, int fontSize, int align, int x, int y, unsigned int color, unsigned int shadowColor, bool shadowEnable) {
??drawForShadow:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        LDR      R7,[SP, #+32]
        LDR      R8,??DataTable16  ;; BCFG_WidgetPosition_X
        MOV      R6,R2
        LDR      R8,[R8, #+0]
        LDRB     R2,[SP, #+40]
        ADD      R8,R8,R3
        LDR      R3,??DataTable17  ;; BCFG_WidgetPosition_Y
        MOV      R4,R0
        LDR      R0,[SP, #+28]
        LDR      R3,[R3, #+0]
        MOV      R5,R1
        LDR      R1,[SP, #+36]
        ADD      R9,R3,R0
        CMP      R2,#+0
        BEQ      ??drawForShadow_1
//   68   if (shadowEnable)
//   69     drawOnStby( message , fontSize , align , x - 2 + BCFG_WidgetPosition_X, y + BCFG_WidgetPosition_Y, shadowColor );
        PUSH     {R1}
        CFI CFA R13+32
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+36
        SUB      R3,R8,#+2
        MOV      R2,R6
        MOV      R1,R5
        MOV      R0,R4
        BL       ??drawOnStby
        ADD      SP,SP,#+8
        CFI CFA R13+28
//   70   drawOnStby( message , fontSize , align , x + BCFG_WidgetPosition_X, y + BCFG_WidgetPosition_Y, color );
??drawForShadow_1:
        PUSH     {R7}
        CFI CFA R13+32
        PUSH     {R9}
        CFI CFA R13+36
        MOV      R3,R8
        MOV      R2,R6
        MOV      R1,R5
        MOV      R0,R4
        BL       ??drawOnStby
//   71 }
        POP      {R0,R1,R4-R9,PC}  ;; return
        CFI EndBlock cfiBlock8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI NoFunction
        THUMB
??returnMask??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock9
        REQUIRE ??returnMask
//   72 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI Function ??returnMask
        ARM
//   73 wchar_t* returnMask(const wchar_t* mask, int tag, bool contentIf, float (*func)(int) , int cond=0) {
??returnMask:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        LDR      R10,[SP, #+32]
        MOV      R4,R0
        MOV      R7,R1
        MOV      R8,R2
        MOV      R9,R3
//   74   int sizeOfTemp = wstrlen(mask) + intlen(tag);
        SWI      +343
        MOV      R5,R0
        MOV      R0,R7
        _BLF     ??intlen,??intlen??rA
        ADD      R5,R0,R5
//   75   wchar_t* newMask = new wchar_t[ sizeOfTemp + 0x1 ];
        ADD      R0,R5,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
//   76   snwprintf( newMask, sizeOfTemp, mask, ( contentIf == cond ? tag : (*func)(tag) ) );
        CMP      R8,R10
        MOV      R0,R7
        BNE      ??returnMask_1
        _BLF     __longToFloat,??__longToFloat??rA
        B        ??returnMask_2
??returnMask_1:
        BLX      R9
??returnMask_2:
        _BLF     __floatToDouble,??__floatToDouble??rA
        PUSH     {R0,R1}
        CFI CFA R13+40
        POP      {R3}
        CFI CFA R13+36
        MOV      R2,R4
        MOV      R1,R5
        MOV      R0,R6
        SWI      +277
//   77   newMask[sizeOfTemp] = 0;
        ADD      R0,R6,R5, LSL #+1
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
//   78   return newMask;
        MOV      R0,R6
        POP      {R1,R4-R10,PC}   ;; return
        CFI EndBlock cfiBlock10
//   79 }

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI NoFunction
        THUMB
??manageCursor??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock11
        REQUIRE ??manageCursor

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI Function ??manageCursor
        ARM
//   80 void manageCursor() {
??manageCursor:
        PUSH     {R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI CFA R13+8
//   81   (mybook->cursorDown) ? mybook->addCursor(-1) : mybook->addCursor(1);
        LDR      R5,??DataTable29  ;; statesID
        LDR      R0,[R5, #+616]
        LDRB     R1,[R0, #+41]
        CMP      R1,#+0
        MVNNE    R1,#+0
        MOVEQ    R1,#+1
        _BLF     ??addCursor,??addCursor??rA
//   82   if (mybook->getCursor() == 0) { mybook->cursorDown = false; mybook->changeWallpaper = false; }
        LDR      R0,[R5, #+616]
        _BLF     ??getCursor,??getCursor??rA
        CMP      R0,#+0
        BNE      ??manageCursor_1
        LDR      R0,[R5, #+616]
        MOV      R1,#+0
        STRB     R1,[R0, #+41]
        STRB     R1,[R0, #+40]
//   83   if (mybook->getCursor() == 19) { mybook->cursorDown = true; mybook->changeWallpaper = false; }
??manageCursor_1:
        LDR      R0,[R5, #+616]
        _BLF     ??getCursor,??getCursor??rA
        CMP      R0,#+19
        POPNE    {R5,PC}
        LDR      R0,[R5, #+616]
        MOV      R1,#+1
        STRB     R1,[R0, #+41]
        MOV      R1,#+0
        STRB     R1,[R0, #+40]
//   84   
//   85 }
        POP      {R5,PC}
        CFI EndBlock cfiBlock12

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI NoFunction
        THUMB
??finalDraw??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock13
        REQUIRE ??finalDraw

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI Function ??finalDraw
        ARM
//   86 void finalDraw(wchar_t* location, int dayState, int tempMin, int tempMax, int windSpeed, wchar_t* state, wchar_t* windDirection, int averageTemp) {
??finalDraw:
        PUSH     {R3-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+40
//   87   wchar_t* temp = NULL;
//   88   //<!--images
//   89   if (BCFG_Images_Background_Enable) {
        LDR      R5,??DataTable33  ;; statesID
        MOV      R10,R0
        LDR      R0,??DataTable37  ;; BCFG_Images_Background_Enable
        SUB      SP,SP,#+4
        CFI CFA R13+44
        LDR      R0,[R0, #+0]
        LDR      R4,[SP, #+44]
        MOV      R6,R1
        MOV      R11,R2
        CMP      R0,#+0
        BEQ      ??finalDraw_1
//   90     if (BCFG_Images_Background_Method == 0) 
        LDR      R1,??DataTable36  ;; BCFG_Images_Background_Method
        LDR      R0,[R5, #+616]
        LDR      R1,[R1, #+0]
        CMP      R1,#+0
        BNE      ??finalDraw_2
//   91       DrawImage(mybook->getGC(), BCFG_Images_Background_Position_X , BCFG_Images_Background_Position_Y, statesID[0x0] );
        _BLF     ??getGC,??getGC??rA
        LDRH     R1,[R5, #+0]
??finalDraw_3:
        LDR      R2,??DataTable17  ;; BCFG_WidgetPosition_Y
        LDR      R7,??DataTable16  ;; BCFG_WidgetPosition_X
        PUSH     {R1}
        CFI CFA R13+48
        MOV      R3,#+0
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R2,[R2, #+0]
        LDR      R7,[R7, #+0]
        LDR      R1,??finalDraw_4  ;; BCFG_Images_Background_Position_Y
        LDR      R1,[R1, #+0]
        ADD      R2,R2,R1
        LDR      R1,??finalDraw_4+0x4  ;; BCFG_Images_Background_Position_X
        LDR      R1,[R1, #+0]
        ADD      R1,R7,R1
        SWI      +320
        ADD      SP,SP,#+8
        CFI CFA R13+44
        B        ??finalDraw_1
//   92     else if (BCFG_Images_Background_Method == 1)
??finalDraw_2:
        CMP      R1,#+1
        BNE      ??finalDraw_5
//   93       DrawImage(mybook->getGC(), BCFG_Images_Background_Position_X , BCFG_Images_Background_Position_Y, statesID[ 0x1 + mybook->wallpaperType ] );
        _BLF     ??getGC,??getGC??rA
        LDR      R1,[R5, #+616]
        LDR      R1,[R1, #+36]
        ADD      R1,R5,R1, LSL #+1
        LDRH     R1,[R1, #+2]
        B        ??finalDraw_3
//   94     else {
//   95       DrawImage(mybook->getGC(), BCFG_Images_Background_Position_X , BCFG_Images_Background_Position_Y, bgID[ mybook->getCursor() ] );
??finalDraw_5:
        _BLF     ??getCursor,??getCursor??rA
        MOV      R7,R0
        LDR      R0,[R5, #+616]
        _BLF     ??getGC,??getGC??rA
        LDR      R2,??DataTable17  ;; BCFG_WidgetPosition_Y
        ADD      R1,R5,R7, LSL #+1
        LDRH     R1,[R1, #+144]
        LDR      R7,??DataTable16  ;; BCFG_WidgetPosition_X
        MOV      R3,#+0
        PUSH     {R1}
        CFI CFA R13+48
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R2,[R2, #+0]
        LDR      R7,[R7, #+0]
        LDR      R1,??finalDraw_4  ;; BCFG_Images_Background_Position_Y
        LDR      R1,[R1, #+0]
        ADD      R2,R2,R1
        LDR      R1,??finalDraw_4+0x4  ;; BCFG_Images_Background_Position_X
        LDR      R1,[R1, #+0]
        ADD      R1,R7,R1
        SWI      +320
//   96       if (mybook->changeWallpaper) manageCursor();
        LDR      R0,[R5, #+616]
        LDRB     R0,[R0, #+40]
        ADD      SP,SP,#+8
        CFI CFA R13+44
        CMP      R0,#+0
        BEQ      ??finalDraw_1
        BL       ??manageCursor
//   97     }
//   98   }
//   99   
//  100   if (BCFG_Images_AccuWeatherLogo_Enable)
??finalDraw_1:
        LDR      R0,??finalDraw_4+0x8  ;; BCFG_Images_AccuWeatherLogo_Enable
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??finalDraw_6
//  101     DrawImage(mybook->getGC(), BCFG_Images_AccuWeatherLogo_Position_X , BCFG_Images_AccuWeatherLogo_Position_Y , statesID[0x1] );
        LDR      R0,[R5, #+616]
        LDR      R7,??DataTable16  ;; BCFG_WidgetPosition_X
        _BLF     ??getGC,??getGC??rA
        LDRH     R1,[R5, #+2]
        LDR      R2,??DataTable17  ;; BCFG_WidgetPosition_Y
        MOV      R3,#+0
        PUSH     {R1}
        CFI CFA R13+48
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R2,[R2, #+0]
        LDR      R7,[R7, #+0]
        LDR      R1,??finalDraw_4+0xC  ;; BCFG_Images_AccuWeatherLogo_Position_Y
        LDR      R1,[R1, #+0]
        ADD      R2,R2,R1
        LDR      R1,??finalDraw_4+0x10  ;; BCFG_Images_AccuWeatherLogo_Position_X
        LDR      R1,[R1, #+0]
        ADD      R1,R7,R1
        SWI      +320
        ADD      SP,SP,#+8
        CFI CFA R13+44
//  102     
//  103   if (!BCFG_Images_ImageOnTop && BCFG_Images_DayState_Enable)
??finalDraw_6:
        LDR      R0,??finalDraw_4+0x14  ;; BCFG_Images_DayState_Enable
        ADD      R1,R5,R6, LSL #+1
        STR      R1,[SP, #+0]
        LDR      R6,[R0, #+0]
        LDR      R0,??finalDraw_4+0x18  ;; BCFG_Images_ImageOnTop
        LDR      R7,[R0, #+0]
        CMP      R7,#+0
        BNE      ??finalDraw_7
        CMP      R6,#+0
        BEQ      ??finalDraw_7
//  104       DrawImage(mybook->getGC(), BCFG_Images_DayState_Position_X , BCFG_Images_DayState_Position_Y , statesID[dayState+0x3] );
        LDR      R0,[R5, #+616]
        LDR      R8,??DataTable16  ;; BCFG_WidgetPosition_X
        _BLF     ??getGC,??getGC??rA
        LDR      R1,[SP, #+0]
        LDR      R2,??DataTable17  ;; BCFG_WidgetPosition_Y
        LDRH     R1,[R1, #+6]
        MOV      R3,#+0
        PUSH     {R1}
        CFI CFA R13+48
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R2,[R2, #+0]
        LDR      R8,[R8, #+0]
        LDR      R1,??finalDraw_4+0x1C  ;; BCFG_Images_DayState_Position_Y
        LDR      R1,[R1, #+0]
        ADD      R2,R2,R1
        LDR      R1,??finalDraw_4+0x20  ;; BCFG_Images_DayState_Position_X
        LDR      R1,[R1, #+0]
        ADD      R1,R8,R1
        SWI      +320
        ADD      SP,SP,#+8
        CFI CFA R13+44
//  105   //-->
//  106   //<!--text
//  107   if (BCFG_Tags_Location_Enable)
??finalDraw_7:
        LDR      R0,??finalDraw_4+0x24  ;; BCFG_Tags_Location_Enable
        MOV      R8,#+1
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??finalDraw_8
//  108     drawForShadow( location , BCFG_Tags_Location_FontSize , BCFG_Tags_Location_Align , BCFG_Tags_Location_Position_X ,
//  109                   BCFG_Tags_Location_Position_Y - 16 , BCFG_Tags_Location_TextColor , BCFG_Tags_Location_ShadowColor ,
//  110                   BCFG_Tags_Location_EnableShadow );
        LDR      R0,??finalDraw_4+0x28  ;; BCFG_Tags_Location_EnableShadow
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        MOVNE    R0,#+1
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R0,??finalDraw_4+0x2C  ;; BCFG_Tags_Location_ShadowColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+52
        LDR      R0,??finalDraw_4+0x30  ;; BCFG_Tags_Location_TextColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+56
        LDR      R0,??finalDraw_4+0x34  ;; BCFG_Tags_Location_Position_Y
        LDR      R0,[R0, #+0]
        SUB      R0,R0,#+16
        PUSH     {R0}
        CFI CFA R13+60
        LDR      R0,??finalDraw_4+0x38  ;; BCFG_Tags_Location_Position_X
        LDR      R3,[R0, #+0]
        LDR      R0,??finalDraw_4+0x3C  ;; BCFG_Tags_Location_Align
        LDR      R2,[R0, #+0]
        LDR      R0,??finalDraw_4+0x40  ;; BCFG_Tags_Location_FontSize
        LDR      R1,[R0, #+0]
        MOV      R0,R10
        BL       ??drawForShadow
        ADD      SP,SP,#+16
        CFI CFA R13+44
//  111   
//  112     
//  113   
//  114   if (BCFG_Tags_MinTemperature_Enable) {//L: %d
??finalDraw_8:
        LDR      R0,??finalDraw_4+0x44  ;; BCFG_Tags_MinTemperature_Enable
        LDR      R10,??finalDraw_4+0x48  ;; ??celsiusToFahrenheit
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??finalDraw_9
//  115     temp = returnMask( BCFG_Tags_MinTemperature_Mask , tempMin , BCFG_Tags_MinTemperature_Unit , celsiusToFahrenheit );
        LDR      R0,??finalDraw_4+0x4C  ;; BCFG_Tags_MinTemperature_Unit
        MOV      R3,R10
        LDR      R0,[R0, #+0]
        MOV      R1,R11
        CMP      R0,#+0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R0,??finalDraw_4+0x50  ;; BCFG_Tags_MinTemperature_Mask
        MOVNE    R2,#+1
        MOVEQ    R2,#+0
        BL       ??returnMask
        MOV      R11,R0
//  116    
//  117     drawForShadow( temp , BCFG_Tags_MinTemperature_FontSize , BCFG_Tags_MinTemperature_Align , BCFG_Tags_MinTemperature_Position_X,
//  118                   BCFG_Tags_MinTemperature_Position_Y - 16 , BCFG_Tags_MinTemperature_TextColor , BCFG_Tags_MinTemperature_ShadowColor,
//  119                   BCFG_Tags_MinTemperature_EnableShadow );
        LDR      R0,??finalDraw_4+0x54  ;; BCFG_Tags_MinTemperature_EnableShadow
        LDR      R0,[R0, #+0]
        ADD      SP,SP,#+4
        CFI CFA R13+44
        CMP      R0,#+0
        MOVNE    R0,#+1
        MOVEQ    R0,#+0
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R0,??finalDraw_4+0x58  ;; BCFG_Tags_MinTemperature_ShadowColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+52
        LDR      R0,??finalDraw_4+0x5C  ;; BCFG_Tags_MinTemperature_TextColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+56
        LDR      R0,??finalDraw_4+0x60  ;; BCFG_Tags_MinTemperature_Position_Y
        LDR      R0,[R0, #+0]
        SUB      R0,R0,#+16
        PUSH     {R0}
        CFI CFA R13+60
        LDR      R0,??finalDraw_4+0x64  ;; BCFG_Tags_MinTemperature_Position_X
        LDR      R3,[R0, #+0]
        LDR      R0,??finalDraw_4+0x68  ;; BCFG_Tags_MinTemperature_Align
        LDR      R2,[R0, #+0]
        LDR      R0,??finalDraw_4+0x6C  ;; BCFG_Tags_MinTemperature_FontSize
        LDR      R1,[R0, #+0]
        MOV      R0,R11
        BL       ??drawForShadow
//  120 
//  121     delete temp; temp = NULL;
        MOV      R0,R11
        _BLF     `??operator delete`,`??operator delete??rA`
        ADD      SP,SP,#+16
        CFI CFA R13+44
//  122   }
//  123   
//  124   if (BCFG_Tags_MaxTemperature_Enable) { //H: %d
??finalDraw_9:
        LDR      R0,??finalDraw_4+0x70  ;; BCFG_Tags_MaxTemperature_Enable
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??finalDraw_10
//  125     temp = returnMask( BCFG_Tags_MaxTemperature_Mask , tempMax , BCFG_Tags_MaxTemperature_Unit , celsiusToFahrenheit );
        LDR      R0,??finalDraw_4+0x74  ;; BCFG_Tags_MaxTemperature_Unit
        MOV      R3,R10
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R1,[SP, #+8]
        LDR      R0,??finalDraw_4+0x78  ;; BCFG_Tags_MaxTemperature_Mask
        MOVNE    R2,#+1
        MOVEQ    R2,#+0
        BL       ??returnMask
        MOV      R11,R0
//  126     
//  127     drawForShadow( temp , BCFG_Tags_MaxTemperature_FontSize , BCFG_Tags_MaxTemperature_Align , BCFG_Tags_MaxTemperature_Position_X,
//  128                   BCFG_Tags_MaxTemperature_Position_Y - 16 , BCFG_Tags_MaxTemperature_TextColor , BCFG_Tags_MaxTemperature_ShadowColor,
//  129                   BCFG_Tags_MaxTemperature_EnableShadow );
        LDR      R0,??finalDraw_4+0x7C  ;; BCFG_Tags_MaxTemperature_EnableShadow
        LDR      R0,[R0, #+0]
        ADD      SP,SP,#+4
        CFI CFA R13+44
        CMP      R0,#+0
        MOVNE    R0,#+1
        MOVEQ    R0,#+0
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R0,??finalDraw_4+0x80  ;; BCFG_Tags_MaxTemperature_ShadowColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+52
        LDR      R0,??finalDraw_4+0x84  ;; BCFG_Tags_MaxTemperature_TextColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+56
        LDR      R0,??finalDraw_4+0x88  ;; BCFG_Tags_MaxTemperature_Position_Y
        LDR      R0,[R0, #+0]
        SUB      R0,R0,#+16
        PUSH     {R0}
        CFI CFA R13+60
        LDR      R0,??finalDraw_4+0x8C  ;; BCFG_Tags_MaxTemperature_Position_X
        LDR      R3,[R0, #+0]
        LDR      R0,??finalDraw_4+0x90  ;; BCFG_Tags_MaxTemperature_Align
        LDR      R2,[R0, #+0]
        LDR      R0,??finalDraw_4+0x94  ;; BCFG_Tags_MaxTemperature_FontSize
        LDR      R1,[R0, #+0]
        MOV      R0,R11
        BL       ??drawForShadow
//  130     delete temp; temp = NULL;
        MOV      R0,R11
        _BLF     `??operator delete`,`??operator delete??rA`
        ADD      SP,SP,#+16
        CFI CFA R13+44
//  131   }
//  132   
//  133   if (BCFG_Tags_WindSpeed_Enable) {// %d KM/H
??finalDraw_10:
        LDR      R0,??finalDraw_4+0x98  ;; BCFG_Tags_WindSpeed_Enable
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??finalDraw_11
//  134     if (BCFG_Tags_WindSpeed_Unit == 2)
        LDR      R0,??finalDraw_4+0x9C  ;; BCFG_Tags_WindSpeed_Unit
        LDR      R1,[R0, #+0]
        LDR      R0,??finalDraw_4+0xA0  ;; BCFG_Tags_WindSpeed_Mask
        CMP      R1,#+2
        BNE      ??finalDraw_12
//  135       temp = returnMask( BCFG_Tags_WindSpeed_Mask , windSpeed , BCFG_Tags_WindSpeed_Unit , km2meter );
        LDR      R3,??finalDraw_4+0xA4  ;; ??km2meter
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+48
        MOV      R2,#+1
        B        ??finalDraw_13
        CFI CFA R13+44
//  136     else
//  137       temp = returnMask( BCFG_Tags_WindSpeed_Mask , windSpeed , BCFG_Tags_WindSpeed_Unit , km2Mile );
??finalDraw_12:
        LDR      R3,??finalDraw_4+0xA8  ;; ??km2Mile
        CMP      R1,#+0
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+48
        MOVNE    R2,#+1
        MOVEQ    R2,#+0
??finalDraw_13:
        MOV      R1,R4
        BL       ??returnMask
        MOV      R11,R0
//  138     
//  139     drawForShadow( temp , BCFG_Tags_WindSpeed_FontSize , BCFG_Tags_WindSpeed_Align , BCFG_Tags_WindSpeed_Position_X,
//  140                   BCFG_Tags_WindSpeed_Position_Y - 16 , BCFG_Tags_WindSpeed_TextColor , BCFG_Tags_WindSpeed_ShadowColor,
//  141                   BCFG_Tags_WindSpeed_EnableShadow );
        LDR      R0,??finalDraw_4+0xAC  ;; BCFG_Tags_WindSpeed_EnableShadow
        ADD      SP,SP,#+4
        CFI CFA R13+44
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        MOVNE    R0,#+1
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R0,??finalDraw_4+0xB0  ;; BCFG_Tags_WindSpeed_ShadowColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+52
        LDR      R0,??finalDraw_4+0xB4  ;; BCFG_Tags_WindSpeed_TextColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+56
        LDR      R0,??finalDraw_4+0xB8  ;; BCFG_Tags_WindSpeed_Position_Y
        LDR      R0,[R0, #+0]
        SUB      R0,R0,#+16
        PUSH     {R0}
        CFI CFA R13+60
        LDR      R0,??finalDraw_4+0xBC  ;; BCFG_Tags_WindSpeed_Position_X
        LDR      R3,[R0, #+0]
        LDR      R0,??finalDraw_4+0xC0  ;; BCFG_Tags_WindSpeed_Align
        LDR      R2,[R0, #+0]
        LDR      R0,??finalDraw_4+0xC4  ;; BCFG_Tags_WindSpeed_FontSize
        LDR      R1,[R0, #+0]
        MOV      R0,R11
        BL       ??drawForShadow
//  142     delete temp; temp = NULL;
        MOV      R0,R11
        _BLF     `??operator delete`,`??operator delete??rA`
        ADD      SP,SP,#+16
        CFI CFA R13+44
//  143   }
//  144 
//  145   if (BCFG_Tags_AverageTemperature_Enable) {// %d
??finalDraw_11:
        LDR      R0,??finalDraw_4+0xC8  ;; BCFG_Tags_AverageTemperature_Enable
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??finalDraw_14
//  146     temp = returnMask( BCFG_Tags_AverageTemperature_Mask , averageTemp , BCFG_Tags_AverageTemperature_Unit , celsiusToFahrenheit );
        LDR      R0,??finalDraw_4+0xCC  ;; BCFG_Tags_AverageTemperature_Unit
        MOV      R3,R10
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R1,[SP, #+60]
        LDR      R0,??finalDraw_4+0xD0  ;; BCFG_Tags_AverageTemperature_Mask
        MOVNE    R2,#+1
        MOVEQ    R2,#+0
        BL       ??returnMask
        MOV      R11,R0
//  147     
//  148     drawForShadow( temp , BCFG_Tags_AverageTemperature_FontSize , BCFG_Tags_AverageTemperature_Align , BCFG_Tags_AverageTemperature_Position_X,
//  149                   BCFG_Tags_AverageTemperature_Position_Y - 16 , BCFG_Tags_AverageTemperature_TextColor , BCFG_Tags_AverageTemperature_ShadowColor,
//  150                   BCFG_Tags_AverageTemperature_EnableShadow );
        LDR      R0,??finalDraw_4+0xD4  ;; BCFG_Tags_AverageTemperature_EnableShadow
        LDR      R0,[R0, #+0]
        ADD      SP,SP,#+4
        CFI CFA R13+44
        CMP      R0,#+0
        MOVNE    R0,#+1
        MOVEQ    R0,#+0
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R0,??finalDraw_4+0xD8  ;; BCFG_Tags_AverageTemperature_ShadowColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+52
        LDR      R0,??finalDraw_4+0xDC  ;; BCFG_Tags_AverageTemperature_TextColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+56
        LDR      R0,??finalDraw_4+0xE0  ;; BCFG_Tags_AverageTemperature_Position_Y
        LDR      R0,[R0, #+0]
        SUB      R0,R0,#+16
        PUSH     {R0}
        CFI CFA R13+60
        LDR      R0,??finalDraw_4+0xE4  ;; BCFG_Tags_AverageTemperature_Position_X
        LDR      R3,[R0, #+0]
        LDR      R0,??finalDraw_4+0xE8  ;; BCFG_Tags_AverageTemperature_Align
        LDR      R2,[R0, #+0]
        LDR      R0,??finalDraw_4+0xEC  ;; BCFG_Tags_AverageTemperature_FontSize
        LDR      R1,[R0, #+0]
        MOV      R0,R11
        BL       ??drawForShadow
//  151     delete temp; temp = NULL;
        MOV      R0,R11
        _BLF     `??operator delete`,`??operator delete??rA`
        ADD      SP,SP,#+16
        CFI CFA R13+44
//  152   }
//  153   
//  154   if (BCFG_Tags_DayState_Enable)
??finalDraw_14:
        LDR      R0,??finalDraw_4+0xF0  ;; BCFG_Tags_DayState_Enable
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??finalDraw_15
//  155     drawForShadow( state , BCFG_Tags_DayState_FontSize , BCFG_Tags_DayState_Align , BCFG_Tags_DayState_Position_X,
//  156                   BCFG_Tags_DayState_Position_Y - 16 , BCFG_Tags_DayState_TextColor , BCFG_Tags_DayState_ShadowColor,
//  157                   BCFG_Tags_DayState_EnableShadow );
        LDR      R0,??finalDraw_4+0xF4  ;; BCFG_Tags_DayState_EnableShadow
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        MOVNE    R0,#+1
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R0,??finalDraw_4+0xF8  ;; BCFG_Tags_DayState_ShadowColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+52
        LDR      R0,??finalDraw_4+0xFC  ;; BCFG_Tags_DayState_TextColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+56
        LDR      R0,??finalDraw_4+0x100  ;; BCFG_Tags_DayState_Position_Y
        LDR      R0,[R0, #+0]
        SUB      R0,R0,#+16
        PUSH     {R0}
        CFI CFA R13+60
        LDR      R0,??finalDraw_4+0x104  ;; BCFG_Tags_DayState_Position_X
        LDR      R3,[R0, #+0]
        LDR      R0,??finalDraw_4+0x108  ;; BCFG_Tags_DayState_Align
        LDR      R2,[R0, #+0]
        LDR      R0,??finalDraw_4+0x10C  ;; BCFG_Tags_DayState_FontSize
        LDR      R1,[R0, #+0]
        LDR      R0,[SP, #+64]
        BL       ??drawForShadow
        ADD      SP,SP,#+16
        CFI CFA R13+44
//  158   
//  159   if (BCFG_Tags_WindDirection_Enable)
??finalDraw_15:
        LDR      R0,??finalDraw_4+0x110  ;; BCFG_Tags_WindDirection_Enable
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??finalDraw_16
//  160     drawForShadow( windDirection , BCFG_Tags_WindDirection_FontSize , BCFG_Tags_WindDirection_Align , BCFG_Tags_WindDirection_Position_X,
//  161                   BCFG_Tags_WindDirection_Position_Y - 16 , BCFG_Tags_WindDirection_TextColor , BCFG_Tags_WindDirection_ShadowColor,
//  162                   BCFG_Tags_WindDirection_EnableShadow );
        LDR      R0,??finalDraw_4+0x114  ;; BCFG_Tags_WindDirection_EnableShadow
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        LDR      R0,??finalDraw_4+0x118  ;; BCFG_Tags_WindDirection_ShadowColor
        MOVEQ    R8,#+0
        PUSH     {R8}
        CFI CFA R13+48
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+52
        LDR      R0,??finalDraw_4+0x11C  ;; BCFG_Tags_WindDirection_TextColor
        LDR      R0,[R0, #+0]
        PUSH     {R0}
        CFI CFA R13+56
        LDR      R0,??finalDraw_4+0x120  ;; BCFG_Tags_WindDirection_Position_Y
        LDR      R0,[R0, #+0]
        SUB      R0,R0,#+16
        PUSH     {R0}
        CFI CFA R13+60
        LDR      R0,??finalDraw_4+0x124  ;; BCFG_Tags_WindDirection_Position_X
        LDR      R3,[R0, #+0]
        LDR      R0,??finalDraw_4+0x128  ;; BCFG_Tags_WindDirection_Align
        LDR      R2,[R0, #+0]
        LDR      R0,??finalDraw_4+0x12C  ;; BCFG_Tags_WindDirection_FontSize
        LDR      R1,[R0, #+0]
        LDR      R0,[SP, #+68]
        BL       ??drawForShadow
        ADD      SP,SP,#+16
        CFI CFA R13+44
//  163   //-->
//  164   //<!--image again
//  165   if (BCFG_Images_ImageOnTop && BCFG_Images_DayState_Enable)
??finalDraw_16:
        CMP      R7,#+0
        CMPNE    R6,#+0
        POPEQ    {R0,R1,R4-R11,PC}
//  166     DrawImage(mybook->getGC(), BCFG_Images_DayState_Position_X , BCFG_Images_DayState_Position_Y , statesID[dayState+0x3] );
        LDR      R0,[R5, #+616]
        LDR      R4,??DataTable16  ;; BCFG_WidgetPosition_X
        _BLF     ??getGC,??getGC??rA
        LDR      R1,[SP, #+0]
        LDR      R2,??DataTable17  ;; BCFG_WidgetPosition_Y
        LDRH     R1,[R1, #+6]
        MOV      R3,#+0
        PUSH     {R1}
        CFI CFA R13+48
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R2,[R2, #+0]
        LDR      R4,[R4, #+0]
        LDR      R1,??finalDraw_4+0x1C  ;; BCFG_Images_DayState_Position_Y
        LDR      R1,[R1, #+0]
        ADD      R2,R2,R1
        LDR      R1,??finalDraw_4+0x20  ;; BCFG_Images_DayState_Position_X
        LDR      R1,[R1, #+0]
        ADD      R1,R4,R1
        SWI      +320
        ADD      SP,SP,#+8
        CFI CFA R13+44
//  167   //-->
//  168 
//  169 }
        POP      {R0,R1,R4-R11,PC}  ;; return
        DATA
??finalDraw_4:
        DC32     BCFG_Images_Background_Position_Y
        DC32     BCFG_Images_Background_Position_X
        DC32     BCFG_Images_AccuWeatherLogo_Enable
        DC32     BCFG_Images_AccuWeatherLogo_Position_Y
        DC32     BCFG_Images_AccuWeatherLogo_Position_X
        DC32     BCFG_Images_DayState_Enable
        DC32     BCFG_Images_ImageOnTop
        DC32     BCFG_Images_DayState_Position_Y
        DC32     BCFG_Images_DayState_Position_X
        DC32     BCFG_Tags_Location_Enable
        DC32     BCFG_Tags_Location_EnableShadow
        DC32     BCFG_Tags_Location_ShadowColor
        DC32     BCFG_Tags_Location_TextColor
        DC32     BCFG_Tags_Location_Position_Y
        DC32     BCFG_Tags_Location_Position_X
        DC32     BCFG_Tags_Location_Align
        DC32     BCFG_Tags_Location_FontSize
        DC32     BCFG_Tags_MinTemperature_Enable
        DC32     ??celsiusToFahrenheit
        DC32     BCFG_Tags_MinTemperature_Unit
        DC32     BCFG_Tags_MinTemperature_Mask
        DC32     BCFG_Tags_MinTemperature_EnableShadow
        DC32     BCFG_Tags_MinTemperature_ShadowColor
        DC32     BCFG_Tags_MinTemperature_TextColor
        DC32     BCFG_Tags_MinTemperature_Position_Y
        DC32     BCFG_Tags_MinTemperature_Position_X
        DC32     BCFG_Tags_MinTemperature_Align
        DC32     BCFG_Tags_MinTemperature_FontSize
        DC32     BCFG_Tags_MaxTemperature_Enable
        DC32     BCFG_Tags_MaxTemperature_Unit
        DC32     BCFG_Tags_MaxTemperature_Mask
        DC32     BCFG_Tags_MaxTemperature_EnableShadow
        DC32     BCFG_Tags_MaxTemperature_ShadowColor
        DC32     BCFG_Tags_MaxTemperature_TextColor
        DC32     BCFG_Tags_MaxTemperature_Position_Y
        DC32     BCFG_Tags_MaxTemperature_Position_X
        DC32     BCFG_Tags_MaxTemperature_Align
        DC32     BCFG_Tags_MaxTemperature_FontSize
        DC32     BCFG_Tags_WindSpeed_Enable
        DC32     BCFG_Tags_WindSpeed_Unit
        DC32     BCFG_Tags_WindSpeed_Mask
        DC32     ??km2meter
        DC32     ??km2Mile
        DC32     BCFG_Tags_WindSpeed_EnableShadow
        DC32     BCFG_Tags_WindSpeed_ShadowColor
        DC32     BCFG_Tags_WindSpeed_TextColor
        DC32     BCFG_Tags_WindSpeed_Position_Y
        DC32     BCFG_Tags_WindSpeed_Position_X
        DC32     BCFG_Tags_WindSpeed_Align
        DC32     BCFG_Tags_WindSpeed_FontSize
        DC32     BCFG_Tags_AverageTemperature_Enable
        DC32     BCFG_Tags_AverageTemperature_Unit
        DC32     BCFG_Tags_AverageTemperature_Mask
        DC32     BCFG_Tags_AverageTemperature_EnableShadow
        DC32     BCFG_Tags_AverageTemperature_ShadowColor
        DC32     BCFG_Tags_AverageTemperature_TextColor
        DC32     BCFG_Tags_AverageTemperature_Position_Y
        DC32     BCFG_Tags_AverageTemperature_Position_X
        DC32     BCFG_Tags_AverageTemperature_Align
        DC32     BCFG_Tags_AverageTemperature_FontSize
        DC32     BCFG_Tags_DayState_Enable
        DC32     BCFG_Tags_DayState_EnableShadow
        DC32     BCFG_Tags_DayState_ShadowColor
        DC32     BCFG_Tags_DayState_TextColor
        DC32     BCFG_Tags_DayState_Position_Y
        DC32     BCFG_Tags_DayState_Position_X
        DC32     BCFG_Tags_DayState_Align
        DC32     BCFG_Tags_DayState_FontSize
        DC32     BCFG_Tags_WindDirection_Enable
        DC32     BCFG_Tags_WindDirection_EnableShadow
        DC32     BCFG_Tags_WindDirection_ShadowColor
        DC32     BCFG_Tags_WindDirection_TextColor
        DC32     BCFG_Tags_WindDirection_Position_Y
        DC32     BCFG_Tags_WindDirection_Position_X
        DC32     BCFG_Tags_WindDirection_Align
        DC32     BCFG_Tags_WindDirection_FontSize
        CFI EndBlock cfiBlock14

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable16:
        DC32     BCFG_WidgetPosition_X

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable17:
        DC32     BCFG_WidgetPosition_Y

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI NoFunction
        THUMB
??onfTimer??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock15
        REQUIRE ??onfTimer
//  170 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI Function ??onfTimer
        ARM
//  171 void onfTimer (u16 tmr , LPARAM) {
??onfTimer:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//  172   DispObject_InvalidateRect(StatusIndication,0);
        LDR      R4,??DataTable29  ;; statesID
        SUB      SP,SP,#+4
        CFI CFA R13+16
        LDR      R0,[R4, #+212]
        MOV      R1,#+0
        SWI      +495
//  173   int refresh;
//  174   (BCFG_Images_Background_Method == 2 && BCFG_Images_Background_Enable && mybook->changeWallpaper) ? refresh = BCFG_RefreshTime : refresh = 1000;
        LDR      R0,??DataTable36  ;; BCFG_Images_Background_Method
        LDR      R0,[R0, #+0]
        CMP      R0,#+2
        BNE      ??onfTimer_1
        LDR      R0,??DataTable37  ;; BCFG_Images_Background_Enable
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??onfTimer_1
        LDR      R0,[R4, #+616]
        LDRB     R0,[R0, #+40]
        CMP      R0,#+0
        LDRNE    R0,??DataTable38  ;; BCFG_RefreshTime
        LDRNE    R5,[R0, #+0]
        BNE      ??onfTimer_2
??onfTimer_1:
        MOV      R5,#+1000
//  175   Timer_ReSet(&mybook->ftimer,refresh,onfTimer,0);
??onfTimer_2:
        MOV      R1,#+0
        MOV      R0,SP
        _BLF     ??LPARAM,??LPARAM??rA
        LDR      R0,[R4, #+616]
        LDR      R3,[SP, #+0]
        LDR      R2,??DataTable39  ;; ??onfTimer
        MOV      R1,R5
        ADD      R0,R0,#+42
        SWI      +296
//  176 }
        POP      {R0,R4,R5,PC}    ;; return
        CFI EndBlock cfiBlock16

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI NoFunction
        THUMB
??checkWallpaper??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock17
        REQUIRE ??checkWallpaper

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI Function ??checkWallpaper
        ARM
//  177 void checkWallpaper(int type) { //1 = dia, 2 = noite
??checkWallpaper:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//  178   if (mybook->wallpaperType != type && BCFG_Images_Background_Method == 2) {
        LDR      R5,??DataTable29  ;; statesID
        MOV      R4,R0
        LDR      R0,[R5, #+616]
        LDR      R1,[R0, #+36]
        CMP      R1,R4
        POPEQ    {R4,R5,PC}
        LDR      R1,??DataTable36  ;; BCFG_Images_Background_Method
        LDR      R1,[R1, #+0]
        CMP      R1,#+2
        POPNE    {R4,R5,PC}
//  179     (type == 1) ? mybook->setCursor(19) : mybook->setCursor(0);
        CMP      R4,#+1
        MOVEQ    R1,#+19
        MOVNE    R1,#+0
        _BLF     ??setCursor,??setCursor??rA
//  180     mybook->changeWallpaper = true;
        LDR      R0,[R5, #+616]
        MOV      R1,#+1
        STRB     R1,[R0, #+40]
//  181     mybook->wallpaperType = type;
        STR      R4,[R0, #+36]
//  182   }
//  183 }
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock18

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI NoFunction
        THUMB
??drawWeatherContents??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock19
        REQUIRE ??drawWeatherContents

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI Function ??drawWeatherContents
        ARM
//  184 void drawWeatherContents() {
??drawWeatherContents:
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+36
//  185   //18 ~ 06: night, 06 ~ 18: day
//  186   DATETIME now = getDateTime();
//  187   if (mybook->getHourSeted() == -1) {
        LDR      R4,??DataTable29  ;; statesID
        SUB      SP,SP,#+8
        CFI CFA R13+44
        MOV      R0,SP
        _BLF     ??getDateTime,??getDateTime??rA
        LDR      R0,[R4, #+616]
        _BLF     ??getHourSeted,??getHourSeted??rA
        CMN      R0,#+1
        BNE      ??drawWeatherContents_1
//  188     if (mybook->getWeatherToDraw() != NULL) mybook->freeWDraw();
        LDR      R0,[R4, #+616]
        _BLF     ??getWeatherToDraw,??getWeatherToDraw??rA
        CMP      R0,#+0
        BEQ      ??drawWeatherContents_2
        LDR      R0,[R4, #+616]
        _BLF     ??freeWDraw,??freeWDraw??rA
//  189     mybook->setHour(now.time.hour);
??drawWeatherContents_2:
        LDRB     R1,[SP, #+4]
        LDR      R0,[R4, #+616]
        _BLF     ??setHour,??setHour??rA
//  190 
//  191     if (now.time.hour >= BCFG_Tags_Time_Night || now.time.hour < BCFG_Tags_Time_Day) {//need to check that later, midnight weather!
        LDRB     R0,[SP, #+4]
        LDR      R1,??drawWeatherContents_3  ;; BCFG_Tags_Time_Night
        LDR      R1,[R1, #+0]
        CMP      R0,R1
        BCS      ??drawWeatherContents_4
        LDR      R1,??drawWeatherContents_3+0x4  ;; BCFG_Tags_Time_Day
        LDR      R1,[R1, #+0]
        CMP      R0,R1
        BCS      ??drawWeatherContents_5
//  192       checkWallpaper(2);
??drawWeatherContents_4:
        MOV      R0,#+2
        BL       ??checkWallpaper
//  193       mybook->setWDraw(2);
        MOV      R1,#+2
        B        ??drawWeatherContents_6
//  194     }
//  195     else {
//  196       checkWallpaper(1);
??drawWeatherContents_5:
        MOV      R0,#+1
        BL       ??checkWallpaper
//  197       mybook->setWDraw(1);
        MOV      R1,#+1
??drawWeatherContents_6:
        LDR      R0,[R4, #+616]
        _BLF     ??setWDraw,??setWDraw??rA
//  198     }
//  199   }
//  200   
//  201   if (mybook->getHourSeted() != now.time.hour) mybook->setHour(-1);
??drawWeatherContents_1:
        LDR      R0,[R4, #+616]
        _BLF     ??getHourSeted,??getHourSeted??rA
        LDRB     R1,[SP, #+4]
        CMP      R0,R1
        BEQ      ??drawWeatherContents_7
        LDR      R0,[R4, #+616]
        MVN      R1,#+0
        _BLF     ??setHour,??setHour??rA
//  202   
//  203   finalDraw(mybook->getLocation(), mybook->getWeatherToDraw()->getState() , mybook->getWeatherToDraw()->getTempMin(), mybook->getWeatherToDraw()->getTempMax(), 
//  204             mybook->getWeatherToDraw()->getWindSpeed(), mybook->getWeatherToDraw()->getState_(), 
//  205             ((BCFG_Tags_WindDirection_Format == 0) ? mybook->getWeatherToDraw()->getWindDirection() : mybook->getWeatherToDraw()->getLongWind()),
//  206             mybook->getWeatherToDraw()->getAverageTemp());
??drawWeatherContents_7:
        LDR      R0,[R4, #+616]
        _BLF     ??getWeatherToDraw,??getWeatherToDraw??rA
        _BLF     ??getAverageTemp,??getAverageTemp??rA
        MOV      R5,R0
        LDR      R0,??drawWeatherContents_3+0x8  ;; BCFG_Tags_WindDirection_Format
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        LDR      R0,[R4, #+616]
        BNE      ??drawWeatherContents_8
        _BLF     ??getWeatherToDraw,??getWeatherToDraw??rA
        _BLF     ??getWindDirection,??getWindDirection??rA
        B        ??drawWeatherContents_9
??drawWeatherContents_8:
        _BLF     ??getWeatherToDraw,??getWeatherToDraw??rA
        _BLF     ??getLongWind,??getLongWind??rA
??drawWeatherContents_9:
        MOV      R6,R0
        LDR      R0,[R4, #+616]
        _BLF     ??getWeatherToDraw,??getWeatherToDraw??rA
        _BLF     ??getState_,??getState_??rA
        MOV      R7,R0
        LDR      R0,[R4, #+616]
        _BLF     ??getWeatherToDraw,??getWeatherToDraw??rA
        _BLF     ??getWindSpeed,??getWindSpeed??rA
        MOV      R8,R0
        LDR      R0,[R4, #+616]
        _BLF     ??getWeatherToDraw,??getWeatherToDraw??rA
        _BLF     ??getTempMax,??getTempMax??rA
        MOV      R9,R0
        LDR      R0,[R4, #+616]
        _BLF     ??getWeatherToDraw,??getWeatherToDraw??rA
        _BLF     ??getTempMin,??getTempMin??rA
        MOV      R10,R0
        LDR      R0,[R4, #+616]
        _BLF     ??getWeatherToDraw,??getWeatherToDraw??rA
        _BLF     ??getState,??getState??rA
        MOV      R11,R0
        LDR      R0,[R4, #+616]
        _BLF     ??getLocation,??getLocation??rA
        PUSH     {R5}
        CFI CFA R13+48
        PUSH     {R6}
        CFI CFA R13+52
        PUSH     {R7}
        CFI CFA R13+56
        PUSH     {R8}
        CFI CFA R13+60
        MOV      R3,R9
        MOV      R2,R10
        MOV      R1,R11
        BL       ??finalDraw
//  207 
//  208   if (isDateEqual(&now,&mybook->dateOfWeather) != 0) {
        LDR      R0,[R4, #+616]
        ADD      R1,R0,#+44
        ADD      R0,SP,#+16
        _BLF     ??isDateEqual,??isDateEqual??rA
        CMP      R0,#+0
        ADD      SP,SP,#+16
        CFI CFA R13+44
        POPEQ    {R0,R1,R4-R11,PC}
//  209     mybook->setHour(-1);
        LDR      R0,[R4, #+616]
        MVN      R1,#+0
        _BLF     ??setHour,??setHour??rA
//  210     beginFile();
        BL       ??beginFile
//  211   }  
//  212 }
        POP      {R0,R1,R4-R11,PC}  ;; return
        DATA
??drawWeatherContents_3:
        DC32     BCFG_Tags_Time_Night
        DC32     BCFG_Tags_Time_Day
        DC32     BCFG_Tags_WindDirection_Format
        CFI EndBlock cfiBlock20

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI NoFunction
        THUMB
??errorInFile??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock21
        REQUIRE ??errorInFile
//  213 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI Function ??errorInFile
        ARM
//  214 void errorInFile(wchar_t* message) {
??errorInFile:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
//  215   MessageBox(0x6FFFFFFF,TextID_Create(message,ENC_UCS2 , wstrlen(message)), NOIMAGE, 1, 0,0);
        SWI      +343
        MOV      R2,R0
        MOV      R1,#+0
        MOV      R0,R4
//  216   mybook->setError(true);
        LDR      R4,??DataTable29  ;; statesID
        SWI      +349
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+12
        PUSH     {R1}
        CFI CFA R13+16
        MOV      R3,#+1
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
        LDR      R0,[R4, #+616]
        MOV      R1,#+1
        _BLF     ??setError,??setError??rA
//  217   message = NULL;
//  218   FreeBook(mybook->getBook());
        LDR      R0,[R4, #+616]
        _BLF     ??getBook,??getBook??rA
        SWI      +303
//  219 }
        POP      {R0,R1,R4,PC}    ;; return
        CFI EndBlock cfiBlock22

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI NoFunction
        THUMB
??beginFile??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock23
        REQUIRE ??beginFile
//  220 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI Function ??beginFile
        ARM
//  221 void beginFile() {
??beginFile:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
//  222   wchar_t* fileContent = openFile(BCFG_XMLBGLogoFolder,L"weather.txt");
        LDR      R5,??DataTable32  ;; BCFG_XMLBGLogoFolder
        LDR      R6,??beginFile_1  ;; `?<Constant L"\\x45\\x72\\x72\\x6f\\x72\\x20\\x69\\x6e\\`
        SUB      SP,SP,#+12
        CFI CFA R13+32
        ADD      R1,R6,#+416
        MOV      R0,R5
        _BLF     ??openFile,??openFile??rA
        MOV      R4,R0
//  223   wchar_t* conditionXml = openFile(BCFG_XMLBGLogoFolder, L"condition.xml");
        ADD      R1,R6,#+440
        MOV      R0,R5
        _BLF     ??openFile,??openFile??rA
        MOV      R5,R0
//  224   if (fileContent != NULL && conditionXml != NULL) {
        CMP      R4,#+0
        CMPNE    R5,#+0
        BEQ      ??beginFile_2
//  225     int pos = 0;
//  226     mybook->freeMyVars();
        LDR      R7,??DataTable29  ;; statesID
        MOV      R1,#+0
        STR      R1,[SP, #+0]
        LDR      R0,[R7, #+616]
        _BLF     ??freeMyVars,??freeMyVars??rA
//  227     mybook->setLocation(getLocation(fileContent, pos));
        MOV      R1,SP
        MOV      R0,R4
        _BLF     ??getLocation_1,??getLocation??rA_1
        MOV      R1,R0
        LDR      R0,[R7, #+616]
        _BLF     ??setLocation,??setLocation??rA
//  228 
//  229     if (mybook->getLocation() == NULL) 
        LDR      R0,[R7, #+616]
        _BLF     ??getLocation,??getLocation??rA
        CMP      R0,#+0
        BNE      ??beginFile_3
//  230       errorInFile(L"Error in location! Update your file weather.txt and run the elf again!");
        ADD      R0,R6,#+468
??beginFile_4:
        BL       ??errorInFile
        B        ??beginFile_5
//  231     else {
//  232       mybook->setDayWeather(getDayWeather(fileContent, pos, conditionXml));
??beginFile_3:
        MOV      R2,R5
        MOV      R1,SP
        MOV      R0,R4
        _BLF     ??getDayWeather,??getDayWeather??rA
        MOV      R1,R0
        LDR      R0,[R7, #+616]
        _BLF     ??setDayWeather,??setDayWeather??rA
//  233 
//  234       if (mybook->getDayWeather() == NULL) errorInFile(L"Error in Day Weather! Update your file weather.txt and run the elf again!");
        LDR      R0,[R7, #+616]
        _BLF     ??getDayWeather_1,??getDayWeather??rA_1
        CMP      R0,#+0
        MOVEQ    R0,R6
        BEQ      ??beginFile_4
//  235       else {
//  236         mybook->setNightWeather(getWeather(fileContent,pos, conditionXml));
        MOV      R2,R5
        MOV      R1,SP
        MOV      R0,R4
        _BLF     ??getWeather,??getWeather??rA
        MOV      R1,R0
        LDR      R0,[R7, #+616]
        _BLF     ??setNightWeather,??setNightWeather??rA
//  237         if (mybook->getNightWeather() == NULL) errorInFile(L"Error in Night Weather! Update your file weather.txt and run the elf again!");
        LDR      R0,[R7, #+616]
        _BLF     ??getNightWeather,??getNightWeather??rA
        CMP      R0,#+0
        BNE      ??beginFile_6
        ADD      R0,R6,#+148
        B        ??beginFile_4
//  238         else mybook->dateOfWeather = getDateTime();
??beginFile_6:
        ADD      R0,SP,#+4
        _BLF     ??getDateTime,??getDateTime??rA
        LDR      R0,[R7, #+616]
        ADD      R1,SP,#+4
        LDRH     R2,[R1, #0]
        STRH     R2,[R0, #+44]!
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//  239       }
//  240     }
//  241     delete fileContent;
??beginFile_5:
        MOV      R0,R4
        _BLF     `??operator delete`,`??operator delete??rA`
//  242     delete conditionXml;
        MOV      R0,R5
        _BLF     `??operator delete`,`??operator delete??rA`
        POP      {R0-R2,R4-R7,PC}
//  243   } 
//  244   else
//  245     errorInFile(L"Error while trying to open weather.txt and condition.xml!");
??beginFile_2:
        ADD      R0,R6,#+300
        BL       ??errorInFile
//  246 }
        POP      {R0-R2,R4-R7,PC}  ;; return
        DATA
??beginFile_1:
        DC32     `?<Constant L"\\x45\\x72\\x72\\x6f\\x72\\x20\\x69\\x6e\\`
        CFI EndBlock cfiBlock24

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI NoFunction
        THUMB
??SB_ELF_Killed??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock25
        REQUIRE ??SB_ELF_Killed
//  247 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon0
        CFI Function ??SB_ELF_Killed
        ARM
//  248 int SB_ELF_Killed(void *mess ,BOOK* book) {
??SB_ELF_Killed:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
//  249   REDRAW_RELEASE_MESSAGE* sbm=(REDRAW_RELEASE_MESSAGE*)mess;
//  250   REDRAW_RELEASE_MESSAGE* res = 0;
//  251   if (sbm->SB_NewOnRedraw==SIonRedraw) {
        LDR      R5,??DataTable29  ;; statesID
        MOV      R4,R0
        LDR      R0,[R4, #+4]
        LDR      R1,[R5, #+208]
        CMP      R0,R1
        BNE      ??SB_ELF_Killed_1
//  252     res=new REDRAW_RELEASE_MESSAGE;
        MOV      R0,#+24
        _BLF     `??operator new`,`??operator new??rA`
        MOV      R6,R0
//  253     memcpy(res,sbm,sizeof(REDRAW_RELEASE_MESSAGE));
        MOV      R2,#+24
        MOV      R1,R4
        SWI      +275
//  254     if (sbm->SB_OldOnRedraw!=EMPTY_REDRAW_METHOD) SIonRedraw=sbm->SB_OldOnRedraw;
        LDR      R0,[R4, #+0]
//  255     DISP_DESC_SetOnRedraw(DispObject_GetDESC(StatusIndication),Draw);
        LDR      R4,??DataTable35  ;; ??Draw
        MVN      R7,#+0
        CMP      R0,R7
        STRNE    R0,[R5, #+208]
        LDR      R0,[R5, #+212]
        SWI      +543
        MOV      R1,R4
        SWI      +552
//  256     res->SB_OldOnRedraw=EMPTY_REDRAW_METHOD;
        STR      R7,[R6, #+0]
//  257     res->SB_NewOnRedraw=Draw;
        STR      R4,[R6, #+4]
//  258   }
//  259   if (res) {
        CMP      R6,#+0
        BEQ      ??SB_ELF_Killed_1
//  260     UI_Event_wData(SBY_REDRAW_RELEASE_EVENT ,res,(void (*)(void*))mfree_adr());
        SWI      +33028
        MOV      R2,R0
        MOV      R1,R6
        MOV      R0,#+227
        ORR      R0,R0,#0x300
        SWI      +425
//  261     return BLOCK_EVENT_GLOBALLY;
        MOV      R0,#+154
        ORR      R0,R0,#0x200
        POP      {R4-R7,PC}
//  262   }
//  263   return 0;
??SB_ELF_Killed_1:
        MOV      R0,#+0
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock26
//  264 }

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable29:
        DC32     statesID

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI NoFunction
        THUMB
??InitImages??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock27
        REQUIRE ??InitImages
//  265 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon0
        CFI Function ??InitImages
        ARM
//  266 void InitImages(void) {
//  267   ImageID_Get(BCFG_Path_Background_StaticBackground,L"background.png",&statesID[0x0]);
??InitImages:
        LDR      R0,??InitImages_1  ;; BCFG_Path_Background_StaticBackground
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        LDR      R4,??DataTable33  ;; statesID
        LDR      R5,??InitImages_1+0x4  ;; `?<Constant L"\\x62\\x61\\x63\\x6b\\x67\\x72\\x6f\\x75\\`
//  268   ImageID_Get(BCFG_XMLBGLogoFolder,L"logo.png",&statesID[0x1]);
//  269   ImageID_Get(BCFG_Path_Background_DayAndNightBG,L"day.png",&statesID[0x2]);
        LDR      R6,??InitImages_1+0x8  ;; BCFG_Path_Background_DayAndNightBG
        MOV      R2,R4
        MOV      R1,R5
        SWI      +716
        LDR      R0,??DataTable32  ;; BCFG_XMLBGLogoFolder
        ADD      R2,R4,#+2
        ADD      R1,R5,#+32
        SWI      +716
        ADD      R2,R4,#+4
        ADD      R1,R5,#+52
        MOV      R0,R6
        SWI      +716
//  270   ImageID_Get(BCFG_Path_Background_DayAndNightBG,L"night.png",&statesID[0x3]);
        ADD      R2,R4,#+6
        ADD      R1,R5,#+68
        MOV      R0,R6
        SWI      +716
//  271   
//  272   for (int i = 0 ; i < 44 ; i++) ImageID_Get(BCFG_StatesFolder,stateImages[i],&statesID[i+0x4]);
        MOV      R5,#+0
??InitImages_2:
        ADD      R0,R4,R5, LSL #+1
        ADD      R2,R0,#+8
        ADD      R0,R4,R5, LSL #+2
        LDR      R1,[R0, #+216]
        LDR      R0,??InitImages_1+0xC  ;; BCFG_StatesFolder
        ADD      R5,R5,#+1
        SWI      +716
        CMP      R5,#+44
        BLT      ??InitImages_2
//  273   for (int i = 0 ; i < 20 ; i++) ImageID_Get(BCFG_Path_Background,bgImages[i],&bgID[i]);
        MOV      R5,#+0
??InitImages_3:
        ADD      R0,R4,R5, LSL #+1
        ADD      R2,R0,#+144
        ADD      R0,R4,R5, LSL #+2
        LDR      R1,[R0, #+488]
        LDR      R0,??InitImages_1+0x10  ;; BCFG_Path_Background
        ADD      R5,R5,#+1
        SWI      +716
        CMP      R5,#+20
        BLT      ??InitImages_3
//  274  
//  275 }
        POP      {R4-R6,PC}       ;; return
        DATA
??InitImages_1:
        DC32     BCFG_Path_Background_StaticBackground
        DC32     `?<Constant L"\\x62\\x61\\x63\\x6b\\x67\\x72\\x6f\\x75\\`
        DC32     BCFG_Path_Background_DayAndNightBG
        DC32     BCFG_StatesFolder
        DC32     BCFG_Path_Background
        CFI EndBlock cfiBlock28

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable32:
        DC32     BCFG_XMLBGLogoFolder

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI NoFunction
        THUMB
??DestroyImages??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock29
        REQUIRE ??DestroyImages
//  276 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon0
        CFI Function ??DestroyImages
        ARM
//  277 void DestroyImages(void) {
??DestroyImages:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//  278   for (int i = 0 ; i < 48 ; i++) ImageID_Free(statesID[i]);
        LDR      R5,??DataTable33  ;; statesID
        MOV      R4,#+0
??DestroyImages_1:
        ADD      R0,R5,R4, LSL #+1
        LDRH     R0,[R0, #+0]
        ADD      R4,R4,#+1
        SWI      +717
        CMP      R4,#+48
        BLT      ??DestroyImages_1
//  279   for (int i = 0 ; i < 20 ; i++) ImageID_Free(bgID[i]);  
        MOV      R4,#+0
??DestroyImages_2:
        ADD      R0,R5,R4, LSL #+1
        LDRH     R0,[R0, #+144]
        ADD      R4,R4,#+1
        SWI      +717
        CMP      R4,#+20
        BLT      ??DestroyImages_2
//  280 }
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock30

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable33:
        DC32     statesID

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon1
        CFI NoFunction
        THUMB
??drawWeatherInfo??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock31
        REQUIRE ??drawWeatherInfo
//  281 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon0
        CFI Function ??drawWeatherInfo
        ARM
//  282 void drawWeatherInfo(MyBook* book) {
??drawWeatherInfo:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//  283   
//  284   mybook = book;
        LDR      R4,??DataTable40  ;; statesID
        SUB      SP,SP,#+4
        CFI CFA R13+16
        STR      R0,[R4, #+616]
//  285 
//  286   beginFile();
        BL       ??beginFile
//  287 
//  288   if (!mybook->getError()) {
        LDR      R0,[R4, #+616]
        _BLF     ??getError,??getError??rA
        CMP      R0,#+0
        POPNE    {R0,R4,R5,PC}
//  289     InitImages();
        BL       ??InitImages
//  290     StatusIndication = GUIObject_GetDispObject( (GUI*)List_Get(Find_StandbyBook()->xguilist->guilist,0) );
        SWI      +305
        LDR      R0,[R0, #+20]
        MOV      R1,#+0
        LDR      R0,[R0, #+4]
        SWI      +429
        SWI      +360
        STR      R0,[R4, #+212]
//  291     SIonRedraw=DispObject_GetOnRedraw(StatusIndication);
        SWI      +553
        STR      R0,[R4, #+208]
//  292     DISP_DESC_SetOnRedraw(DispObject_GetDESC(StatusIndication),Draw);
        LDR      R0,[R4, #+212]
        SWI      +543
        LDR      R1,??DataTable35  ;; ??Draw
        SWI      +552
//  293     int refresh;
//  294     (BCFG_Images_Background_Method == 2 && BCFG_Images_Background_Enable) ? refresh = BCFG_RefreshTime : refresh = 1000;    
        LDR      R0,??DataTable36  ;; BCFG_Images_Background_Method
        LDR      R0,[R0, #+0]
        CMP      R0,#+2
        BNE      ??drawWeatherInfo_1
        LDR      R0,??DataTable37  ;; BCFG_Images_Background_Enable
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        LDRNE    R0,??DataTable38  ;; BCFG_RefreshTime
        LDRNE    R5,[R0, #+0]
        BNE      ??drawWeatherInfo_2
??drawWeatherInfo_1:
        MOV      R5,#+1000
//  295     mybook->ftimer=Timer_Set(refresh,onfTimer,0);
??drawWeatherInfo_2:
        MOV      R1,#+0
        MOV      R0,SP
        _BLF     ??LPARAM,??LPARAM??rA
        LDR      R2,[SP, #+0]
        LDR      R1,??DataTable39  ;; ??onfTimer
        MOV      R0,R5
        SWI      +297
        LDR      R1,[R4, #+616]
        STRH     R0,[R1, #+42]
//  296   }
//  297 }
        POP      {R0,R4,R5,PC}    ;; return
        CFI EndBlock cfiBlock32

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable35:
        DC32     ??Draw

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable36:
        DC32     BCFG_Images_Background_Method

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable37:
        DC32     BCFG_Images_Background_Enable

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable38:
        DC32     BCFG_RefreshTime

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable39:
        DC32     ??onfTimer

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon1
        CFI NoFunction
        THUMB
??onCloseBEBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock33
        REQUIRE ??onCloseBEBook
//  298 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon0
        CFI Function ??onCloseBEBook
        ARM
//  299 void onCloseBEBook(BOOK* book) {
??onCloseBEBook:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
//  300   if (book)  {
        CMP      R0,#+0
        POPEQ    {R4,PC}
//  301     if (StatusIndication) {
        LDR      R4,??DataTable40  ;; statesID
        LDR      R0,[R4, #+212]
        CMP      R0,#+0
        BEQ      ??onCloseBEBook_1
//  302       Timer_Kill(&mybook->ftimer);
        LDR      R0,[R4, #+616]
        ADD      R0,R0,#+42
        SWI      +298
//  303       DestroyImages();
        BL       ??DestroyImages
//  304       DISP_DESC_SetOnRedraw(DispObject_GetDESC(StatusIndication),SIonRedraw);
        LDR      R0,[R4, #+212]
        SWI      +543
        LDR      R1,[R4, #+208]
        SWI      +552
//  305       DispObject_InvalidateRect(StatusIndication,0);
        LDR      R0,[R4, #+212]
        MOV      R1,#+0
        SWI      +495
//  306       Send_REDRAW_RELEASE();
        BL       ??Send_REDRAW_RELEASE
//  307     }
//  308     mybook->freeMyVars();
??onCloseBEBook_1:
        LDR      R0,[R4, #+616]
        _BLF     ??freeMyVars,??freeMyVars??rA
//  309     delete mybook;
        LDR      R0,[R4, #+616]
        _BLF     `??operator delete`,`??operator delete??rA`
//  310     SUBPROC(elf_exit);
        LDR      R0,??onCloseBEBook_2  ;; ??elf_exit
        SWI      +264
//  311   }
//  312 }
        POP      {R4,PC}          ;; return
        DATA
??onCloseBEBook_2:
        DC32     ??elf_exit
        CFI EndBlock cfiBlock34

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable40:
        DC32     statesID

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon0
        CFI NoFunction
        ARM
`??operator new??rA`:
        LDR      R12,??Subroutine17_0  ;; `??operator new`
        BX       R12
        DATA
??Subroutine17_0:
        DC32     `??operator new`
        CFI EndBlock cfiBlock35

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon0
        CFI NoFunction
        ARM
??searchLine??rA:
        LDR      R12,??Subroutine18_0  ;; ??searchLine
        BX       R12
        DATA
??Subroutine18_0:
        DC32     ??searchLine
        CFI EndBlock cfiBlock36

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon0
        CFI NoFunction
        ARM
??wGetIndexOfLine??rA:
        LDR      R12,??Subroutine19_0  ;; ??wGetIndexOfLine
        BX       R12
        DATA
??Subroutine19_0:
        DC32     ??wGetIndexOfLine
        CFI EndBlock cfiBlock37

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon0
        CFI NoFunction
        ARM
??getWSubStr??rA:
        LDR      R12,??Subroutine20_0  ;; ??getWSubStr
        BX       R12
        DATA
??Subroutine20_0:
        DC32     ??getWSubStr
        CFI EndBlock cfiBlock38

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock39 Using cfiCommon0
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine21_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine21_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock39

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock40 Using cfiCommon0
        CFI NoFunction
        ARM
??donothing??rA:
        LDR      R12,??Subroutine22_0  ;; ??donothing
        BX       R12
        DATA
??Subroutine22_0:
        DC32     ??donothing
        CFI EndBlock cfiBlock40

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock41 Using cfiCommon0
        CFI NoFunction
        ARM
??intlen??rA:
        LDR      R12,??Subroutine23_0  ;; ??intlen
        BX       R12
        DATA
??Subroutine23_0:
        DC32     ??intlen
        CFI EndBlock cfiBlock41

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock42 Using cfiCommon0
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine24_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine24_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock42

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock43 Using cfiCommon0
        CFI NoFunction
        ARM
??__longToFloat??rA:
        LDR      R3,??Subroutine25_0  ;; __longToFloat
        BX       R3
        DATA
??Subroutine25_0:
        DC32     __longToFloat
        CFI EndBlock cfiBlock43

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock44 Using cfiCommon0
        CFI NoFunction
        ARM
??__floatToDouble??rA:
        LDR      R3,??Subroutine26_0  ;; __floatToDouble
        BX       R3
        DATA
??Subroutine26_0:
        DC32     __floatToDouble
        CFI EndBlock cfiBlock44

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock45 Using cfiCommon0
        CFI NoFunction
        ARM
??addCursor??rA:
        LDR      R12,??Subroutine27_0  ;; ??addCursor
        BX       R12
        DATA
??Subroutine27_0:
        DC32     ??addCursor
        CFI EndBlock cfiBlock45

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock46 Using cfiCommon0
        CFI NoFunction
        ARM
??getCursor??rA:
        LDR      R12,??Subroutine28_0  ;; ??getCursor
        BX       R12
        DATA
??Subroutine28_0:
        DC32     ??getCursor
        CFI EndBlock cfiBlock46

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock47 Using cfiCommon0
        CFI NoFunction
        ARM
??getGC??rA:
        LDR      R12,??Subroutine29_0  ;; ??getGC
        BX       R12
        DATA
??Subroutine29_0:
        DC32     ??getGC
        CFI EndBlock cfiBlock47

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock48 Using cfiCommon0
        CFI NoFunction
        ARM
??LPARAM??rA:
        LDR      R12,??Subroutine30_0  ;; ??LPARAM
        BX       R12
        DATA
??Subroutine30_0:
        DC32     ??LPARAM
        CFI EndBlock cfiBlock48

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock49 Using cfiCommon0
        CFI NoFunction
        ARM
??setCursor??rA:
        LDR      R12,??Subroutine31_0  ;; ??setCursor
        BX       R12
        DATA
??Subroutine31_0:
        DC32     ??setCursor
        CFI EndBlock cfiBlock49

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock50 Using cfiCommon0
        CFI NoFunction
        ARM
??getDateTime??rA:
        LDR      R12,??Subroutine32_0  ;; ??getDateTime
        BX       R12
        DATA
??Subroutine32_0:
        DC32     ??getDateTime
        CFI EndBlock cfiBlock50

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock51 Using cfiCommon0
        CFI NoFunction
        ARM
??getHourSeted??rA:
        LDR      R12,??Subroutine33_0  ;; ??getHourSeted
        BX       R12
        DATA
??Subroutine33_0:
        DC32     ??getHourSeted
        CFI EndBlock cfiBlock51

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock52 Using cfiCommon0
        CFI NoFunction
        ARM
??getWeatherToDraw??rA:
        LDR      R12,??Subroutine34_0  ;; ??getWeatherToDraw
        BX       R12
        DATA
??Subroutine34_0:
        DC32     ??getWeatherToDraw
        CFI EndBlock cfiBlock52

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock53 Using cfiCommon0
        CFI NoFunction
        ARM
??freeWDraw??rA:
        LDR      R12,??Subroutine35_0  ;; ??freeWDraw
        BX       R12
        DATA
??Subroutine35_0:
        DC32     ??freeWDraw
        CFI EndBlock cfiBlock53

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock54 Using cfiCommon0
        CFI NoFunction
        ARM
??setHour??rA:
        LDR      R12,??Subroutine36_0  ;; ??setHour
        BX       R12
        DATA
??Subroutine36_0:
        DC32     ??setHour
        CFI EndBlock cfiBlock54

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock55 Using cfiCommon0
        CFI NoFunction
        ARM
??setWDraw??rA:
        LDR      R12,??Subroutine37_0  ;; ??setWDraw
        BX       R12
        DATA
??Subroutine37_0:
        DC32     ??setWDraw
        CFI EndBlock cfiBlock55

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock56 Using cfiCommon0
        CFI NoFunction
        ARM
??getAverageTemp??rA:
        LDR      R12,??Subroutine38_0  ;; ??getAverageTemp
        BX       R12
        DATA
??Subroutine38_0:
        DC32     ??getAverageTemp
        CFI EndBlock cfiBlock56

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock57 Using cfiCommon0
        CFI NoFunction
        ARM
??getWindDirection??rA:
        LDR      R12,??Subroutine39_0  ;; ??getWindDirection
        BX       R12
        DATA
??Subroutine39_0:
        DC32     ??getWindDirection
        CFI EndBlock cfiBlock57

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock58 Using cfiCommon0
        CFI NoFunction
        ARM
??getLongWind??rA:
        LDR      R12,??Subroutine40_0  ;; ??getLongWind
        BX       R12
        DATA
??Subroutine40_0:
        DC32     ??getLongWind
        CFI EndBlock cfiBlock58

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock59 Using cfiCommon0
        CFI NoFunction
        ARM
??getState_??rA:
        LDR      R12,??Subroutine41_0  ;; ??getState_
        BX       R12
        DATA
??Subroutine41_0:
        DC32     ??getState_
        CFI EndBlock cfiBlock59

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock60 Using cfiCommon0
        CFI NoFunction
        ARM
??getWindSpeed??rA:
        LDR      R12,??Subroutine42_0  ;; ??getWindSpeed
        BX       R12
        DATA
??Subroutine42_0:
        DC32     ??getWindSpeed
        CFI EndBlock cfiBlock60

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock61 Using cfiCommon0
        CFI NoFunction
        ARM
??getTempMax??rA:
        LDR      R12,??Subroutine43_0  ;; ??getTempMax
        BX       R12
        DATA
??Subroutine43_0:
        DC32     ??getTempMax
        CFI EndBlock cfiBlock61

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock62 Using cfiCommon0
        CFI NoFunction
        ARM
??getTempMin??rA:
        LDR      R12,??Subroutine44_0  ;; ??getTempMin
        BX       R12
        DATA
??Subroutine44_0:
        DC32     ??getTempMin
        CFI EndBlock cfiBlock62

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock63 Using cfiCommon0
        CFI NoFunction
        ARM
??getState??rA:
        LDR      R12,??Subroutine45_0  ;; ??getState
        BX       R12
        DATA
??Subroutine45_0:
        DC32     ??getState
        CFI EndBlock cfiBlock63

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock64 Using cfiCommon0
        CFI NoFunction
        ARM
??getLocation??rA:
        LDR      R12,??Subroutine46_0  ;; ??getLocation
        BX       R12
        DATA
??Subroutine46_0:
        DC32     ??getLocation
        CFI EndBlock cfiBlock64

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock65 Using cfiCommon0
        CFI NoFunction
        ARM
??isDateEqual??rA:
        LDR      R12,??Subroutine47_0  ;; ??isDateEqual
        BX       R12
        DATA
??Subroutine47_0:
        DC32     ??isDateEqual
        CFI EndBlock cfiBlock65

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock66 Using cfiCommon0
        CFI NoFunction
        ARM
??setError??rA:
        LDR      R12,??Subroutine48_0  ;; ??setError
        BX       R12
        DATA
??Subroutine48_0:
        DC32     ??setError
        CFI EndBlock cfiBlock66

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock67 Using cfiCommon0
        CFI NoFunction
        ARM
??getBook??rA:
        LDR      R12,??Subroutine49_0  ;; ??getBook
        BX       R12
        DATA
??Subroutine49_0:
        DC32     ??getBook
        CFI EndBlock cfiBlock67

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock68 Using cfiCommon0
        CFI NoFunction
        ARM
??openFile??rA:
        LDR      R12,??Subroutine50_0  ;; ??openFile
        BX       R12
        DATA
??Subroutine50_0:
        DC32     ??openFile
        CFI EndBlock cfiBlock68

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock69 Using cfiCommon0
        CFI NoFunction
        ARM
??freeMyVars??rA:
        LDR      R12,??Subroutine51_0  ;; ??freeMyVars
        BX       R12
        DATA
??Subroutine51_0:
        DC32     ??freeMyVars
        CFI EndBlock cfiBlock69

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock70 Using cfiCommon0
        CFI NoFunction
        ARM
??getLocation??rA_1:
        LDR      R12,??Subroutine52_0  ;; ??getLocation_1
        BX       R12
        DATA
??Subroutine52_0:
        DC32     ??getLocation_1
        CFI EndBlock cfiBlock70

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock71 Using cfiCommon0
        CFI NoFunction
        ARM
??setLocation??rA:
        LDR      R12,??Subroutine53_0  ;; ??setLocation
        BX       R12
        DATA
??Subroutine53_0:
        DC32     ??setLocation
        CFI EndBlock cfiBlock71

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock72 Using cfiCommon0
        CFI NoFunction
        ARM
??getDayWeather??rA:
        LDR      R12,??Subroutine54_0  ;; ??getDayWeather
        BX       R12
        DATA
??Subroutine54_0:
        DC32     ??getDayWeather
        CFI EndBlock cfiBlock72

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock73 Using cfiCommon0
        CFI NoFunction
        ARM
??setDayWeather??rA:
        LDR      R12,??Subroutine55_0  ;; ??setDayWeather
        BX       R12
        DATA
??Subroutine55_0:
        DC32     ??setDayWeather
        CFI EndBlock cfiBlock73

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock74 Using cfiCommon0
        CFI NoFunction
        ARM
??getDayWeather??rA_1:
        LDR      R12,??Subroutine56_0  ;; ??getDayWeather_1
        BX       R12
        DATA
??Subroutine56_0:
        DC32     ??getDayWeather_1
        CFI EndBlock cfiBlock74

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock75 Using cfiCommon0
        CFI NoFunction
        ARM
??getWeather??rA:
        LDR      R12,??Subroutine57_0  ;; ??getWeather
        BX       R12
        DATA
??Subroutine57_0:
        DC32     ??getWeather
        CFI EndBlock cfiBlock75

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock76 Using cfiCommon0
        CFI NoFunction
        ARM
??setNightWeather??rA:
        LDR      R12,??Subroutine58_0  ;; ??setNightWeather
        BX       R12
        DATA
??Subroutine58_0:
        DC32     ??setNightWeather
        CFI EndBlock cfiBlock76

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock77 Using cfiCommon0
        CFI NoFunction
        ARM
??getNightWeather??rA:
        LDR      R12,??Subroutine59_0  ;; ??getNightWeather
        BX       R12
        DATA
??Subroutine59_0:
        DC32     ??getNightWeather
        CFI EndBlock cfiBlock77

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock78 Using cfiCommon0
        CFI NoFunction
        ARM
??getError??rA:
        LDR      R12,??Subroutine60_0  ;; ??getError
        BX       R12
        DATA
??Subroutine60_0:
        DC32     ??getError
        CFI EndBlock cfiBlock78

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for statesID>`:
        DATA
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
        DC16 65535, 65535, 65535
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
`?<Initializer for bgID>`:
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
        DC16 65535, 65535
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0
`?<Initializer for SIonRedraw>`:
        DC8 0, 0, 0, 0
`?<Initializer for StatusIndication>`:
        DC8 0, 0, 0, 0
`?<Initializer for stateImages>`:
        DC32 `?<Constant L"\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x34\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x35\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x36\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x37\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x38\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x39\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x30\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x32\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x33\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x34\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x35\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x36\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x37\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x38\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x39\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x30\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x32\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x33\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x34\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x35\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x36\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x37\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x38\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x39\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x30\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x32\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x33\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x34\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x35\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x36\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x37\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x38\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x39\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x39\\x2e\\x70\\x6e\\x67">`
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
`?<Initializer for bgImages>`:
        DC32 `?<Constant L"\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x33\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x34\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x35\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x36\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x37\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x38\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x39\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x30\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x31\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x32\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x33\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x34\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x35\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x36\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x37\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x38\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x31\\x39\\x2e\\x70\\x6e\\x67">`
        DC32 `?<Constant L"\\x32\\x30\\x2e\\x70\\x6e\\x67">`
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
`?<Initializer for mybook>`:
        DC8 0, 0, 0, 0

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x45\\x72\\x72\\x6f\\x72\\x20\\x69\\x6e\\`:
        DATA
        DC8 45H, 0, 72H, 0, 72H, 0, 6FH, 0
        DC8 72H, 0, 20H, 0, 69H, 0, 6EH, 0
        DC8 20H, 0, 44H, 0, 61H, 0, 79H, 0
        DC8 20H, 0, 57H, 0, 65H, 0, 61H, 0
        DC8 74H, 0, 68H, 0, 65H, 0, 72H, 0
        DC8 21H, 0, 20H, 0, 55H, 0, 70H, 0
        DC8 64H, 0, 61H, 0, 74H, 0, 65H, 0
        DC8 20H, 0, 79H, 0, 6FH, 0, 75H, 0
        DC8 72H, 0, 20H, 0, 66H, 0, 69H, 0
        DC8 6CH, 0, 65H, 0, 20H, 0, 77H, 0
        DC8 65H, 0, 61H, 0, 74H, 0, 68H, 0
        DC8 65H, 0, 72H, 0, 2EH, 0, 74H, 0
        DC8 78H, 0, 74H, 0, 20H, 0, 61H, 0
        DC8 6EH, 0, 64H, 0, 20H, 0, 72H, 0
        DC8 75H, 0, 6EH, 0, 20H, 0, 74H, 0
        DC8 68H, 0, 65H, 0, 20H, 0, 65H, 0
        DC8 6CH, 0, 66H, 0, 20H, 0, 61H, 0
        DC8 67H, 0, 61H, 0, 69H, 0, 6EH, 0
        DC8 21H, 0, 0, 0
        DC8 45H, 0, 72H, 0, 72H, 0, 6FH, 0
        DC8 72H, 0, 20H, 0, 69H, 0, 6EH, 0
        DC8 20H, 0, 4EH, 0, 69H, 0, 67H, 0
        DC8 68H, 0, 74H, 0, 20H, 0, 57H, 0
        DC8 65H, 0, 61H, 0, 74H, 0, 68H, 0
        DC8 65H, 0, 72H, 0, 21H, 0, 20H, 0
        DC8 55H, 0, 70H, 0, 64H, 0, 61H, 0
        DC8 74H, 0, 65H, 0, 20H, 0, 79H, 0
        DC8 6FH, 0, 75H, 0, 72H, 0, 20H, 0
        DC8 66H, 0, 69H, 0, 6CH, 0, 65H, 0
        DC8 20H, 0, 77H, 0, 65H, 0, 61H, 0
        DC8 74H, 0, 68H, 0, 65H, 0, 72H, 0
        DC8 2EH, 0, 74H, 0, 78H, 0, 74H, 0
        DC8 20H, 0, 61H, 0, 6EH, 0, 64H, 0
        DC8 20H, 0, 72H, 0, 75H, 0, 6EH, 0
        DC8 20H, 0, 74H, 0, 68H, 0, 65H, 0
        DC8 20H, 0, 65H, 0, 6CH, 0, 66H, 0
        DC8 20H, 0, 61H, 0, 67H, 0, 61H, 0
        DC8 69H, 0, 6EH, 0, 21H, 0, 0, 0
        DC8 45H, 0, 72H, 0, 72H, 0, 6FH, 0
        DC8 72H, 0, 20H, 0, 77H, 0, 68H, 0
        DC8 69H, 0, 6CH, 0, 65H, 0, 20H, 0
        DC8 74H, 0, 72H, 0, 79H, 0, 69H, 0
        DC8 6EH, 0, 67H, 0, 20H, 0, 74H, 0
        DC8 6FH, 0, 20H, 0, 6FH, 0, 70H, 0
        DC8 65H, 0, 6EH, 0, 20H, 0, 77H, 0
        DC8 65H, 0, 61H, 0, 74H, 0, 68H, 0
        DC8 65H, 0, 72H, 0, 2EH, 0, 74H, 0
        DC8 78H, 0, 74H, 0, 20H, 0, 61H, 0
        DC8 6EH, 0, 64H, 0, 20H, 0, 63H, 0
        DC8 6FH, 0, 6EH, 0, 64H, 0, 69H, 0
        DC8 74H, 0, 69H, 0, 6FH, 0, 6EH, 0
        DC8 2EH, 0, 78H, 0, 6DH, 0, 6CH, 0
        DC8 21H, 0, 0, 0
        DC8 77H, 0, 65H, 0, 61H, 0, 74H, 0
        DC8 68H, 0, 65H, 0, 72H, 0, 2EH, 0
        DC8 74H, 0, 78H, 0, 74H, 0, 0, 0
        DC8 63H, 0, 6FH, 0, 6EH, 0, 64H, 0
        DC8 69H, 0, 74H, 0, 69H, 0, 6FH, 0
        DC8 6EH, 0, 2EH, 0, 78H, 0, 6DH, 0
        DC8 6CH, 0, 0, 0
        DC8 45H, 0, 72H, 0, 72H, 0, 6FH, 0
        DC8 72H, 0, 20H, 0, 69H, 0, 6EH, 0
        DC8 20H, 0, 6CH, 0, 6FH, 0, 63H, 0
        DC8 61H, 0, 74H, 0, 69H, 0, 6FH, 0
        DC8 6EH, 0, 21H, 0, 20H, 0, 55H, 0
        DC8 70H, 0, 64H, 0, 61H, 0, 74H, 0
        DC8 65H, 0, 20H, 0, 79H, 0, 6FH, 0
        DC8 75H, 0, 72H, 0, 20H, 0, 66H, 0
        DC8 69H, 0, 6CH, 0, 65H, 0, 20H, 0
        DC8 77H, 0, 65H, 0, 61H, 0, 74H, 0
        DC8 68H, 0, 65H, 0, 72H, 0, 2EH, 0
        DC8 74H, 0, 78H, 0, 74H, 0, 20H, 0
        DC8 61H, 0, 6EH, 0, 64H, 0, 20H, 0
        DC8 72H, 0, 75H, 0, 6EH, 0, 20H, 0
        DC8 74H, 0, 68H, 0, 65H, 0, 20H, 0
        DC8 65H, 0, 6CH, 0, 66H, 0, 20H, 0
        DC8 61H, 0, 67H, 0, 61H, 0, 69H, 0
        DC8 6EH, 0, 21H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x62\\x61\\x63\\x6b\\x67\\x72\\x6f\\x75\\`:
        DATA
        DC8 62H, 0, 61H, 0, 63H, 0, 6BH, 0
        DC8 67H, 0, 72H, 0, 6FH, 0, 75H, 0
        DC8 6EH, 0, 64H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0
        DC8 6CH, 0, 6FH, 0, 67H, 0, 6FH, 0
        DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 64H, 0, 61H, 0, 79H, 0, 2EH, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
        DC8 6EH, 0, 69H, 0, 67H, 0, 68H, 0
        DC8 74H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x38\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 38H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x34\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 34H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x35\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 35H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x36\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 36H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x37\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 37H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x39\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 39H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x30\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 30H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x31\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 31H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x32\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 32H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x33\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 33H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x34\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 34H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x35\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 35H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x36\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 36H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x37\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 37H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x38\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 38H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x31\\x39\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 31H, 0, 39H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x30\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 30H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x31\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 31H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x32\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 32H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x33\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 33H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x34\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 34H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x35\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 35H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x36\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 36H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x37\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 37H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x38\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 38H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x32\\x39\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 32H, 0, 39H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x30\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 30H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x31\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 31H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x32\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 32H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x33\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 33H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x34\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 34H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x35\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 35H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x36\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 36H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x37\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 37H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x38\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 38H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x33\\x39\\x2e\\x70\\x6e\\x67">`:
        DATA
        DC8 33H, 0, 39H, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        END
// 
// 5 208 bytes in segment CODE
// 1 288 bytes in segment DATA_C
//   620 bytes in segment DATA_I
//   620 bytes in segment DATA_ID
//    12 bytes in segment INITTAB
// 
// 4 604 bytes of CODE  memory (+ 616 bytes shared)
// 1 908 bytes of CONST memory
//   620 bytes of DATA  memory
//
//Errors: none
//Warnings: none
