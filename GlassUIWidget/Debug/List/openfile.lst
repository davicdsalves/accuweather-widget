##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    08/May/2011  19:48:27 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\file\op #
#                       enfile.cpp                                           #
#    Command line    =  C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\file\op #
#                       enfile.cpp -D OLDFUNCTIONS -lC                       #
#                       C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\Debug\L #
#                       ist\ -lA C:\Users\Faby\Desktop\StudyElf\GlassUIWidge #
#                       t\Debug\List\ -o C:\Users\Faby\Desktop\StudyElf\Glas #
#                       sUIWidget\Debug\Obj\ -z2 --no_cse --no_unroll        #
#                       --no_inline --no_code_motion --no_tbaa               #
#                       --no_clustering --no_scheduling --debug --cpu_mode   #
#                       arm --endian little --cpu ARM926EJ-S --stack_align   #
#                       4 --interwork -e --fpu None --eec++ --dlib_config    #
#                       "C:\Users\Faby\EmbebedIAR\Embedded Workbench 4.0     #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\Users\Faby\EmbebedIAR\Embedded Workbench 4.0     #
#                       Evaluation\ARM\INC\"                                 #
#    List file       =  C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\Debug\L #
#                       ist\openfile.lst                                     #
#    Object file     =  C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\Debug\O #
#                       bj\openfile.r79                                      #
#                                                                            #
#                                                                            #
##############################################################################

C:\Users\Faby\Desktop\StudyElf\GlassUIWidget\file\openfile.cpp
      1          #include "..\..\include\Lib_Clara.h"
      2          #include "..\..\include\Dir.h"
      3          #include "..\bcfg\config_data.h"
      4          #include "openfile.h"
      5          

   \                                 In segment CODE, align 4, keep-with-next
      6          wchar_t* openFile(const wchar_t* path, wchar_t* fileName) {
   \                     ??openFile:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040B0E1           MOVS     R4,R0
   \   0000000C   0150B0E1           MOVS     R5,R1
      7            int file;
      8            FSTAT fstat_;
      9          
     10            w_chdir(path);
   \   00000010   0400B0E1           MOVS     R0,R4
   \   00000014   F70200EF           SWI      +759
     11            
     12            file = w_fopen(fileName, WA_Read ,0x1FF,0 );
   \   00000018   0030A0E3           MOV      R3,#+0
   \   0000001C   FF20A0E3           MOV      R2,#+255
   \   00000020   402F82E3           ORR      R2,R2,#0x100
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   0500B0E1           MOVS     R0,R5
   \   0000002C   F80200EF           SWI      +760
   \   00000030   0060B0E1           MOVS     R6,R0
     13            int stat = fstat(path,fileName,&fstat_);
   \   00000034   0D20B0E1           MOVS     R2,SP
   \   00000038   0510B0E1           MOVS     R1,R5
   \   0000003C   0400B0E1           MOVS     R0,R4
   \   00000040   1C0100EF           SWI      +284
   \   00000044   0070B0E1           MOVS     R7,R0
     14          
     15            if ( file > -1 && stat == 0 ) {
   \   00000048   000056E3           CMP      R6,#+0
   \   0000004C   1D00004A           BMI      ??openFile_1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   1B00001A           BNE      ??openFile_1
     16          
     17             char* fileContent = new char[fstat_.fsize + 0x1];
   \   00000058   08009DE5           LDR      R0,[SP, #+8]
   \   0000005C   010090E2           ADDS     R0,R0,#+1
   \   00000060   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   00000064   0080B0E1           MOVS     R8,R0
     18             wchar_t* wFileContent = new wchar_t[fstat_.fsize + 0x1];
   \   00000068   08009DE5           LDR      R0,[SP, #+8]
   \   0000006C   010090E2           ADDS     R0,R0,#+1
   \   00000070   0210A0E3           MOV      R1,#+2
   \   00000074   910010E0           MULS     R0,R1,R0
   \   00000078   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   0000007C   0090B0E1           MOVS     R9,R0
     19          
     20             w_fread(file,fileContent,fstat_.fsize);
   \   00000080   08209DE5           LDR      R2,[SP, #+8]
   \   00000084   0810B0E1           MOVS     R1,R8
   \   00000088   0600B0E1           MOVS     R0,R6
   \   0000008C   FB0200EF           SWI      +763
     21             fileContent[fstat_.fsize]=0;
   \   00000090   08009DE5           LDR      R0,[SP, #+8]
   \   00000094   0010A0E3           MOV      R1,#+0
   \   00000098   0810C0E7           STRB     R1,[R0, +R8]
     22             str2wstr(wFileContent,fileContent);
   \   0000009C   0810B0E1           MOVS     R1,R8
   \   000000A0   0900B0E1           MOVS     R0,R9
   \   000000A4   580100EF           SWI      +344
     23             delete fileContent;
   \   000000A8   0800B0E1           MOVS     R0,R8
   \   000000AC   ........           _BLF     `??operator delete`,`??operator delete??rA`
     24             fileContent = NULL;
   \   000000B0   0000A0E3           MOV      R0,#+0
   \   000000B4   0080B0E1           MOVS     R8,R0
     25             
     26             w_fclose(file);   
   \   000000B8   0600B0E1           MOVS     R0,R6
   \   000000BC   FD0200EF           SWI      +765
     27             return wFileContent;
   \   000000C0   0900B0E1           MOVS     R0,R9
   \   000000C4   000000EA           B        ??openFile_2
     28            }
     29            return NULL;
   \                     ??openFile_1:
   \   000000C8   0000A0E3           MOV      R0,#+0
   \                     ??openFile_2:
   \   000000CC   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   000000D0   F083BDE8           POP      {R4-R9,PC}       ;; return
     30          }
     31          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     openFile(wchar_t const *, wchar_t *)
                                       56


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     openFile(wchar_t const *, wchar_t *)
                                     212
      Others                          28

 
 240 bytes in segment CODE
 
 212 bytes of CODE memory (+ 28 bytes shared)

Errors: none
Warnings: none
